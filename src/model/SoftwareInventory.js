/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.SoftwareInventory = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SoftwareInventory model module.
   * @module model/SoftwareInventory
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>SoftwareInventory</code>.
   * Software inventory details.
   * @alias module:model/SoftwareInventory
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>SoftwareInventory</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SoftwareInventory} obj Optional instance to populate.
   * @return {module:model/SoftwareInventory} The populated <code>SoftwareInventory</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('computerID')) {
        obj['computerID'] = ApiClient.convertToType(data['computerID'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('startDate')) {
        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Number');
      }
      if (data.hasOwnProperty('completedDate')) {
        obj['completedDate'] = ApiClient.convertToType(data['completedDate'], 'Number');
      }
      if (data.hasOwnProperty('initiatorID')) {
        obj['initiatorID'] = ApiClient.convertToType(data['initiatorID'], 'Number');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
    }
    return obj;
  }

  /**
   * ID of the computer that the inventory scan was performed on (or is being performed on). Searchable as Numeric.
   * @member {Number} computerID
   */
  exports.prototype['computerID'] = undefined;
  /**
   * Name of the inventory. Searchable as String.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Description of the inventory. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * State of the inventory scan. Searchable as Choice.
   * @member {module:model/SoftwareInventory.StateEnum} state
   */
  exports.prototype['state'] = undefined;
  /**
   * Time the inventory scan was started, in milliseconds since epoch. Searchable as Date.
   * @member {Number} startDate
   */
  exports.prototype['startDate'] = undefined;
  /**
   * Time the inventory scan was completed, in milliseconds since epoch. Searchable as Date.
   * @member {Number} completedDate
   */
  exports.prototype['completedDate'] = undefined;
  /**
   * Either the ID of the administrator that initiated the inventory scan or the ID of the API key if the inventory scan was initiated using an API Key. Searchable as Numeric.
   * @member {Number} initiatorID
   */
  exports.prototype['initiatorID'] = undefined;
  /**
   * ID of the software inventory. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;


  /**
   * Allowed values for the <code>state</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StateEnum = {
    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",
    /**
     * value: "building"
     * @const
     */
    "building": "building",
    /**
     * value: "complete"
     * @const
     */
    "complete": "complete",
    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",
    /**
     * value: "requested"
     * @const
     */
    "requested": "requested"  };


  return exports;
}));



