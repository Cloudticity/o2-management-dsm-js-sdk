/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.SoftwareChange = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SoftwareChange model module.
   * @module model/SoftwareChange
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>SoftwareChange</code>.
   * Software change details.
   * @alias module:model/SoftwareChange
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>SoftwareChange</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SoftwareChange} obj Optional instance to populate.
   * @return {module:model/SoftwareChange} The populated <code>SoftwareChange</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('computerID')) {
        obj['computerID'] = ApiClient.convertToType(data['computerID'], 'Number');
      }
      if (data.hasOwnProperty('computerGroupID')) {
        obj['computerGroupID'] = ApiClient.convertToType(data['computerGroupID'], 'Number');
      }
      if (data.hasOwnProperty('vendorName')) {
        obj['vendorName'] = ApiClient.convertToType(data['vendorName'], 'String');
      }
      if (data.hasOwnProperty('productName')) {
        obj['productName'] = ApiClient.convertToType(data['productName'], 'String');
      }
      if (data.hasOwnProperty('productVersion')) {
        obj['productVersion'] = ApiClient.convertToType(data['productVersion'], 'String');
      }
      if (data.hasOwnProperty('fileVersion')) {
        obj['fileVersion'] = ApiClient.convertToType(data['fileVersion'], 'String');
      }
      if (data.hasOwnProperty('fileDescription')) {
        obj['fileDescription'] = ApiClient.convertToType(data['fileDescription'], 'String');
      }
      if (data.hasOwnProperty('sha1')) {
        obj['sha1'] = ApiClient.convertToType(data['sha1'], 'String');
      }
      if (data.hasOwnProperty('sha256')) {
        obj['sha256'] = ApiClient.convertToType(data['sha256'], 'String');
      }
      if (data.hasOwnProperty('md5')) {
        obj['md5'] = ApiClient.convertToType(data['md5'], 'String');
      }
      if (data.hasOwnProperty('fileName')) {
        obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
      }
      if (data.hasOwnProperty('installPath')) {
        obj['installPath'] = ApiClient.convertToType(data['installPath'], 'String');
      }
      if (data.hasOwnProperty('fileSize')) {
        obj['fileSize'] = ApiClient.convertToType(data['fileSize'], 'Number');
      }
      if (data.hasOwnProperty('changeEventTime')) {
        obj['changeEventTime'] = ApiClient.convertToType(data['changeEventTime'], 'Number');
      }
      if (data.hasOwnProperty('changeByUser')) {
        obj['changeByUser'] = ApiClient.convertToType(data['changeByUser'], 'String');
      }
      if (data.hasOwnProperty('changeByUserID')) {
        obj['changeByUserID'] = ApiClient.convertToType(data['changeByUserID'], 'String');
      }
      if (data.hasOwnProperty('changeByProcess')) {
        obj['changeByProcess'] = ApiClient.convertToType(data['changeByProcess'], 'String');
      }
      if (data.hasOwnProperty('changeByProcessID')) {
        obj['changeByProcessID'] = ApiClient.convertToType(data['changeByProcessID'], 'String');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
    }
    return obj;
  }

  /**
   * ID of the computer on which the software change was found. Searchable as Numeric.
   * @member {Number} computerID
   */
  exports.prototype['computerID'] = undefined;
  /**
   * ID of the computer group where the software change was found. Searchable as Numeric.
   * @member {Number} computerGroupID
   */
  exports.prototype['computerGroupID'] = undefined;
  /**
   * Vendor name associated with the changed software. Searchable as String.
   * @member {String} vendorName
   */
  exports.prototype['vendorName'] = undefined;
  /**
   * Product name associated with the changed software. Searchable as String.
   * @member {String} productName
   */
  exports.prototype['productName'] = undefined;
  /**
   * Product version associated with the changed software. Searchable as String.
   * @member {String} productVersion
   */
  exports.prototype['productVersion'] = undefined;
  /**
   * File version associated with the changed software. Searchable as String.
   * @member {String} fileVersion
   */
  exports.prototype['fileVersion'] = undefined;
  /**
   * File description associated with the changed software. Searchable as String.
   * @member {String} fileDescription
   */
  exports.prototype['fileDescription'] = undefined;
  /**
   * SHA1 hash calculated from the changed software. Searchable as String.
   * @member {String} sha1
   */
  exports.prototype['sha1'] = undefined;
  /**
   * SHA256 hash calculated from the changed software. Searchable as String.
   * @member {String} sha256
   */
  exports.prototype['sha256'] = undefined;
  /**
   * MD5 hash calculated from the changed software. Searchable as String.
   * @member {String} md5
   */
  exports.prototype['md5'] = undefined;
  /**
   * File name of the changed software. Searchable as String.
   * @member {String} fileName
   */
  exports.prototype['fileName'] = undefined;
  /**
   * Path on which the software change was found. Searchable as String.
   * @member {String} installPath
   */
  exports.prototype['installPath'] = undefined;
  /**
   * File size of the changed software in bytes. Searchable as Numeric.
   * @member {Number} fileSize
   */
  exports.prototype['fileSize'] = undefined;
  /**
   * Time the software change was discovered, in milliseconds since epoch. Searchable as Date.
   * @member {Number} changeEventTime
   */
  exports.prototype['changeEventTime'] = undefined;
  /**
   * Username of the user that introduced the software change. Searchable as String.
   * @member {String} changeByUser
   */
  exports.prototype['changeByUser'] = undefined;
  /**
   * User ID of the user that introduced the software change. Searchable as String.
   * @member {String} changeByUserID
   */
  exports.prototype['changeByUserID'] = undefined;
  /**
   * Name of the process that introduced the software change. Searchable as String.
   * @member {String} changeByProcess
   */
  exports.prototype['changeByProcess'] = undefined;
  /**
   * Process ID of the process that introduced the software change. Searchable as String.
   * @member {String} changeByProcessID
   */
  exports.prototype['changeByProcessID'] = undefined;
  /**
   * ID of software change. Searchable as Numeric.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;



  return exports;
}));



