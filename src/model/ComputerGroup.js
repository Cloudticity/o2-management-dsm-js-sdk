/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.ComputerGroup = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ComputerGroup model module.
   * @module model/ComputerGroup
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>ComputerGroup</code>.
   * Logical containers to organize computers that are protected by Deep Security Manager.
   * @alias module:model/ComputerGroup
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>ComputerGroup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ComputerGroup} obj Optional instance to populate.
   * @return {module:model/ComputerGroup} The populated <code>ComputerGroup</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('parentGroupID')) {
        obj['parentGroupID'] = ApiClient.convertToType(data['parentGroupID'], 'Number');
      }
      if (data.hasOwnProperty('directoryID')) {
        obj['directoryID'] = ApiClient.convertToType(data['directoryID'], 'Number');
      }
      if (data.hasOwnProperty('externalID')) {
        obj['externalID'] = ApiClient.convertToType(data['externalID'], 'String');
      }
      if (data.hasOwnProperty('virtualID')) {
        obj['virtualID'] = ApiClient.convertToType(data['virtualID'], 'Number');
      }
      if (data.hasOwnProperty('virtualType')) {
        obj['virtualType'] = ApiClient.convertToType(data['virtualType'], 'Number');
      }
      if (data.hasOwnProperty('virtualName')) {
        obj['virtualName'] = ApiClient.convertToType(data['virtualName'], 'String');
      }
      if (data.hasOwnProperty('cloudType')) {
        obj['cloudType'] = ApiClient.convertToType(data['cloudType'], 'String');
      }
      if (data.hasOwnProperty('cloudResourceType')) {
        obj['cloudResourceType'] = ApiClient.convertToType(data['cloudResourceType'], 'String');
      }
      if (data.hasOwnProperty('cloudID')) {
        obj['cloudID'] = ApiClient.convertToType(data['cloudID'], 'Number');
      }
      if (data.hasOwnProperty('amazonAccountID')) {
        obj['amazonAccountID'] = ApiClient.convertToType(data['amazonAccountID'], 'Number');
      }
      if (data.hasOwnProperty('amazonRegionID')) {
        obj['amazonRegionID'] = ApiClient.convertToType(data['amazonRegionID'], 'Number');
      }
      if (data.hasOwnProperty('amazonVPCID')) {
        obj['amazonVPCID'] = ApiClient.convertToType(data['amazonVPCID'], 'Number');
      }
      if (data.hasOwnProperty('amazonSubnetID')) {
        obj['amazonSubnetID'] = ApiClient.convertToType(data['amazonSubnetID'], 'Number');
      }
      if (data.hasOwnProperty('amazonWorkspacesID')) {
        obj['amazonWorkspacesID'] = ApiClient.convertToType(data['amazonWorkspacesID'], 'Number');
      }
      if (data.hasOwnProperty('amazonDirectoryID')) {
        obj['amazonDirectoryID'] = ApiClient.convertToType(data['amazonDirectoryID'], 'Number');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Specifies what type the ComputerGroup is. Defaults to `folder`
   * @member {module:model/ComputerGroup.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Name of the ComputerGroup. Searchable as String.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Description of the ComputerGroup. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * ID of the ComputerGroup's parent group. Empty if the parent is a root ComputerGroup. ComputerGroup will be a root group unless a valid value for `parentGroupID` is set. Searchable as Numeric.
   * @member {Number} parentGroupID
   */
  exports.prototype['parentGroupID'] = undefined;
  /**
   * ID of the ComputerGroup's directory server. Set to `0` if the group is not a directory server. Searchable as Numeric.
   * @member {Number} directoryID
   */
  exports.prototype['directoryID'] = undefined;
  /**
   * External ID of the ComputerGroup. Empty if the ComputerGroup is not created/managed by a cloud account. Searchable as String.
   * @member {String} externalID
   */
  exports.prototype['externalID'] = undefined;
  /**
   * ID of the ComputerGroup as it exists in VMware vCloud. Set to `0` if the ComputerGroup is not from vCloud. Searchable as Numeric.
   * @member {Number} virtualID
   */
  exports.prototype['virtualID'] = undefined;
  /**
   * Type of the ComputerGroup as it exists in VMware vCloud. Set to `0` if the ComputerGroup is not from vCloud. Searchable as Numeric.
   * @member {Number} virtualType
   */
  exports.prototype['virtualType'] = undefined;
  /**
   * Name of the ComputerGroup as it exists in VMware vCloud. Ignored if the ComputerGroup is not from vCloud. Searchable as String.
   * @member {String} virtualName
   */
  exports.prototype['virtualName'] = undefined;
  /**
   * Cloud platform of the ComputerGroup.  Ignored if the ComputerGroup does not represent a cloud container. Searchable as Choice.
   * @member {module:model/ComputerGroup.CloudTypeEnum} cloudType
   */
  exports.prototype['cloudType'] = undefined;
  /**
   * Cloud container type of the ComputerGroup. This is platform dependent. Ignored if the ComputerGroup does not represent a cloud container. Searchable as Numeric.
   * @member {module:model/ComputerGroup.CloudResourceTypeEnum} cloudResourceType
   */
  exports.prototype['cloudResourceType'] = undefined;
  /**
   * Cloud container ID of the ComputerGroup. Ignored if the ComputerGroup does not represent a cloud container. Searchable as Numeric.
   * @member {Number} cloudID
   */
  exports.prototype['cloudID'] = undefined;
  /**
   * Amazon Web Services account ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services account. Searchable as Numeric.
   * @member {Number} amazonAccountID
   */
  exports.prototype['amazonAccountID'] = undefined;
  /**
   * Amazon Web Services region ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services region. amazonWorkspacesID will be used instead if the ComputerGroup represents an Amazon Web Services WorkSpaces node. Searchable as Numeric.
   * @member {Number} amazonRegionID
   */
  exports.prototype['amazonRegionID'] = undefined;
  /**
   * Amazon Web Services Virtual Private Cloud ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services Virtual Private Cloud. Searchable as Numeric.
   * @member {Number} amazonVPCID
   */
  exports.prototype['amazonVPCID'] = undefined;
  /**
   * Amazon Web Services subnet ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services subnet. Searchable as Numeric.
   * @member {Number} amazonSubnetID
   */
  exports.prototype['amazonSubnetID'] = undefined;
  /**
   * Amazon Web Services WorkSpaces ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services WorkSpace. Will be used instead of amazonRegionID if the ComputerGroup represents a WorkSpaces node under a region. Searchable as Numeric.
   * @member {Number} amazonWorkspacesID
   */
  exports.prototype['amazonWorkspacesID'] = undefined;
  /**
   * Amazon Web Services directory ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services directory. Searchable as Numeric.
   * @member {Number} amazonDirectoryID
   */
  exports.prototype['amazonDirectoryID'] = undefined;
  /**
   * ID of the ComputerGroup. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "ad-add-directory"
     * @const
     */
    "ad-add-directory": "ad-add-directory",
    /**
     * value: "ad-folder-network"
     * @const
     */
    "ad-folder-network": "ad-folder-network",
    /**
     * value: "aws-region"
     * @const
     */
    "aws-region": "aws-region",
    /**
     * value: "aws-vpc"
     * @const
     */
    "aws-vpc": "aws-vpc",
    /**
     * value: "aws-subnet"
     * @const
     */
    "aws-subnet": "aws-subnet",
    /**
     * value: "aws-workspaces"
     * @const
     */
    "aws-workspaces": "aws-workspaces",
    /**
     * value: "aws-directory"
     * @const
     */
    "aws-directory": "aws-directory",
    /**
     * value: "azure-top"
     * @const
     */
    "azure-top": "azure-top",
    /**
     * value: "azure-group"
     * @const
     */
    "azure-group": "azure-group",
    /**
     * value: "cloud-provider-top"
     * @const
     */
    "cloud-provider-top": "cloud-provider-top",
    /**
     * value: "vcloud-top"
     * @const
     */
    "vcloud-top": "vcloud-top",
    /**
     * value: "aws-account"
     * @const
     */
    "aws-account": "aws-account",
    /**
     * value: "vm-group"
     * @const
     */
    "vm-group": "vm-group",
    /**
     * value: "vcloud-provider_datacenter"
     * @const
     */
    "vcloud-provider_datacenter": "vcloud-provider_datacenter",
    /**
     * value: "vcloud-vapp"
     * @const
     */
    "vcloud-vapp": "vcloud-vapp",
    /**
     * value: "vcenters-top"
     * @const
     */
    "vcenters-top": "vcenters-top",
    /**
     * value: "vcenter-folder-network"
     * @const
     */
    "vcenter-folder-network": "vcenter-folder-network",
    /**
     * value: "vmware-datacenter"
     * @const
     */
    "vmware-datacenter": "vmware-datacenter",
    /**
     * value: "vcenter-cluster-group"
     * @const
     */
    "vcenter-cluster-group": "vcenter-cluster-group",
    /**
     * value: "external-group"
     * @const
     */
    "external-group": "external-group",
    /**
     * value: "folder"
     * @const
     */
    "folder": "folder",
    /**
     * value: "root"
     * @const
     */
    "root": "root"  };

  /**
   * Allowed values for the <code>cloudType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CloudTypeEnum = {
    /**
     * value: "amazon"
     * @const
     */
    "amazon": "amazon",
    /**
     * value: "vcloud-private-cloud"
     * @const
     */
    "vcloud-private-cloud": "vcloud-private-cloud",
    /**
     * value: "azure"
     * @const
     */
    "azure": "azure",
    /**
     * value: "azure-arm"
     * @const
     */
    "azure-arm": "azure-arm"  };

  /**
   * Allowed values for the <code>cloudResourceType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CloudResourceTypeEnum = {
    /**
     * value: "physical"
     * @const
     */
    "physical": "physical",
    /**
     * value: "top-level"
     * @const
     */
    "top-level": "top-level",
    /**
     * value: "partition"
     * @const
     */
    "partition": "partition",
    /**
     * value: "aws-ec2-instance"
     * @const
     */
    "aws-ec2-instance": "aws-ec2-instance",
    /**
     * value: "aws-workspace"
     * @const
     */
    "aws-workspace": "aws-workspace",
    /**
     * value: "vcloud-organization"
     * @const
     */
    "vcloud-organization": "vcloud-organization",
    /**
     * value: "vcloud-catalog"
     * @const
     */
    "vcloud-catalog": "vcloud-catalog",
    /**
     * value: "vcloud-networks"
     * @const
     */
    "vcloud-networks": "vcloud-networks",
    /**
     * value: "vcloud-virtual-data-center"
     * @const
     */
    "vcloud-virtual-data-center": "vcloud-virtual-data-center",
    /**
     * value: "vcloud-virtual-application"
     * @const
     */
    "vcloud-virtual-application": "vcloud-virtual-application",
    /**
     * value: "vcloud-virtual-application-template"
     * @const
     */
    "vcloud-virtual-application-template": "vcloud-virtual-application-template",
    /**
     * value: "vcloud-virtual-machine"
     * @const
     */
    "vcloud-virtual-machine": "vcloud-virtual-machine",
    /**
     * value: "azure-instance"
     * @const
     */
    "azure-instance": "azure-instance",
    /**
     * value: "azure-arm-instance"
     * @const
     */
    "azure-arm-instance": "azure-arm-instance"  };


  return exports;
}));



