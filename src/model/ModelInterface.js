/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.ModelInterface = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ModelInterface model module.
   * @module model/ModelInterface
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>ModelInterface</code>.
   * Network interface of a managed computer.
   * @alias module:model/ModelInterface
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>ModelInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelInterface} obj Optional instance to populate.
   * @return {module:model/ModelInterface} The populated <code>ModelInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('interfaceTypeID')) {
        obj['interfaceTypeID'] = ApiClient.convertToType(data['interfaceTypeID'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('displayName')) {
        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
      }
      if (data.hasOwnProperty('detected')) {
        obj['detected'] = ApiClient.convertToType(data['detected'], 'Boolean');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
      if (data.hasOwnProperty('MAC')) {
        obj['MAC'] = ApiClient.convertToType(data['MAC'], 'String');
      }
      if (data.hasOwnProperty('DHCP')) {
        obj['DHCP'] = ApiClient.convertToType(data['DHCP'], 'Boolean');
      }
      if (data.hasOwnProperty('IPs')) {
        obj['IPs'] = ApiClient.convertToType(data['IPs'], ['String']);
      }
    }
    return obj;
  }

  /**
   * ID of the InterfaceType to which the Interface is mapped. Searchable as Numeric.
   * @member {Number} interfaceTypeID
   */
  exports.prototype['interfaceTypeID'] = undefined;
  /**
   * Name of the Interface. Set automatically by the DSM. Searchable as String.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Display name of the Interface. Optionally set by the user. Searchable as String.
   * @member {String} displayName
   */
  exports.prototype['displayName'] = undefined;
  /**
   * Indicates whether or not the interface is currently detected. Searchable as Boolean.
   * @member {Boolean} detected
   */
  exports.prototype['detected'] = undefined;
  /**
   * ID of the Interface.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * MAC Address of the interface. Searchable as String.
   * @member {String} MAC
   */
  exports.prototype['MAC'] = undefined;
  /**
   * Indicates whether the interface uses DHCP. The value is true if it uses DHCP. Searchable as Boolean.
   * @member {Boolean} DHCP
   */
  exports.prototype['DHCP'] = undefined;
  /**
   * List of IPs used by the interface.
   * @member {Array.<String>} IPs
   */
  exports.prototype['IPs'] = undefined;



  return exports;
}));



