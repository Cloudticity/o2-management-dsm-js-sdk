/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.ApiKey = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ApiKey model module.
   * @module model/ApiKey
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>ApiKey</code>.
   * Details of an API key. Use API keys to authenticate requests with Deep Security Manager.
   * @alias module:model/ApiKey
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>ApiKey</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApiKey} obj Optional instance to populate.
   * @return {module:model/ApiKey} The populated <code>ApiKey</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('keyName')) {
        obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('locale')) {
        obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
      }
      if (data.hasOwnProperty('roleID')) {
        obj['roleID'] = ApiClient.convertToType(data['roleID'], 'Number');
      }
      if (data.hasOwnProperty('timeZone')) {
        obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
      }
      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Number');
      }
      if (data.hasOwnProperty('lastSignIn')) {
        obj['lastSignIn'] = ApiClient.convertToType(data['lastSignIn'], 'Number');
      }
      if (data.hasOwnProperty('unlockTime')) {
        obj['unlockTime'] = ApiClient.convertToType(data['unlockTime'], 'Number');
      }
      if (data.hasOwnProperty('unsuccessfulSignInAttempts')) {
        obj['unsuccessfulSignInAttempts'] = ApiClient.convertToType(data['unsuccessfulSignInAttempts'], 'Number');
      }
      if (data.hasOwnProperty('expiryDate')) {
        obj['expiryDate'] = ApiClient.convertToType(data['expiryDate'], 'Number');
      }
      if (data.hasOwnProperty('secretKey')) {
        obj['secretKey'] = ApiClient.convertToType(data['secretKey'], 'String');
      }
      if (data.hasOwnProperty('serviceAccount')) {
        obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'Boolean');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Display name of the APIKey. Searchable as String.
   * @member {String} keyName
   */
  exports.prototype['keyName'] = undefined;
  /**
   * Description of the APIKey. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Country and language for the APIKey.
   * @member {module:model/ApiKey.LocaleEnum} locale
   */
  exports.prototype['locale'] = undefined;
  /**
   * ID of the role assigned to the APIKey. Searchable as Numeric.
   * @member {Number} roleID
   */
  exports.prototype['roleID'] = undefined;
  /**
   * Display name of the APIKey's time zone, e.g. America/New_York. Searchable as String.
   * @member {String} timeZone
   */
  exports.prototype['timeZone'] = undefined;
  /**
   * If true, the APIKey can be used to authenticate. If false, the APIKey is locked out. Searchable as Boolean.
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * Timestamp of the APIKey's creation, in milliseconds since epoch. Searchable as Date.
   * @member {Number} created
   */
  exports.prototype['created'] = undefined;
  /**
   * Timestamp of the APIKey's last successful authentication, in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastSignIn
   */
  exports.prototype['lastSignIn'] = undefined;
  /**
   * Timestamp of when a locked out APIKey will be unlocked, in milliseconds since epoch. Searchable as Date.
   * @member {Number} unlockTime
   */
  exports.prototype['unlockTime'] = undefined;
  /**
   * Number of unsuccessful authentication attempts made since the last successful authentication. Searchable as Numeric.
   * @member {Number} unsuccessfulSignInAttempts
   */
  exports.prototype['unsuccessfulSignInAttempts'] = undefined;
  /**
   * Timestamp of the APIKey's expiry date, in milliseconds since epoch. Searchable as Date.
   * @member {Number} expiryDate
   */
  exports.prototype['expiryDate'] = undefined;
  /**
   * Secret key used to authenticate API requests. Only returned when creating a new APIKey or regenerating the secret key.
   * @member {String} secretKey
   */
  exports.prototype['secretKey'] = undefined;
  /**
   * If true, the APIKey was created by the primary tenant (T0) to authenticate API calls against other tenants' databases. Searchable as Boolean.
   * @member {Boolean} serviceAccount
   */
  exports.prototype['serviceAccount'] = undefined;
  /**
   * ID of the APIKey. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;


  /**
   * Allowed values for the <code>locale</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LocaleEnum = {
    /**
     * value: "en-US"
     * @const
     */
    "en-US": "en-US",
    /**
     * value: "ja-JP"
     * @const
     */
    "ja-JP": "ja-JP"  };


  return exports;
}));



