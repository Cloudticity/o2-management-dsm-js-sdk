/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LogFiles'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LogFiles'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.LogInspectionRule = factory(root.Deepsecurity.ApiClient, root.Deepsecurity.LogFiles);
  }
}(this, function(ApiClient, LogFiles) {
  'use strict';




  /**
   * The LogInspectionRule model module.
   * @module model/LogInspectionRule
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>LogInspectionRule</code>.
   * Contains string matching and threshold to trigger alerts as well as group information for log inspection rules.
   * @alias module:model/LogInspectionRule
   * @class
   */
  var exports = function() {
    var _this = this;






























  };

  /**
   * Constructs a <code>LogInspectionRule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LogInspectionRule} obj Optional instance to populate.
   * @return {module:model/LogInspectionRule} The populated <code>LogInspectionRule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('minimumAgentVersion')) {
        obj['minimumAgentVersion'] = ApiClient.convertToType(data['minimumAgentVersion'], 'String');
      }
      if (data.hasOwnProperty('minimumManagerVersion')) {
        obj['minimumManagerVersion'] = ApiClient.convertToType(data['minimumManagerVersion'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('originalIssue')) {
        obj['originalIssue'] = ApiClient.convertToType(data['originalIssue'], 'Number');
      }
      if (data.hasOwnProperty('lastUpdated')) {
        obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Number');
      }
      if (data.hasOwnProperty('identifier')) {
        obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
      }
      if (data.hasOwnProperty('template')) {
        obj['template'] = ApiClient.convertToType(data['template'], 'String');
      }
      if (data.hasOwnProperty('ruleID')) {
        obj['ruleID'] = ApiClient.convertToType(data['ruleID'], 'Number');
      }
      if (data.hasOwnProperty('level')) {
        obj['level'] = ApiClient.convertToType(data['level'], 'Number');
      }
      if (data.hasOwnProperty('groups')) {
        obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
      }
      if (data.hasOwnProperty('ruleDescription')) {
        obj['ruleDescription'] = ApiClient.convertToType(data['ruleDescription'], 'String');
      }
      if (data.hasOwnProperty('pattern')) {
        obj['pattern'] = ApiClient.convertToType(data['pattern'], 'String');
      }
      if (data.hasOwnProperty('patternType')) {
        obj['patternType'] = ApiClient.convertToType(data['patternType'], 'String');
      }
      if (data.hasOwnProperty('dependency')) {
        obj['dependency'] = ApiClient.convertToType(data['dependency'], 'String');
      }
      if (data.hasOwnProperty('dependencyRuleID')) {
        obj['dependencyRuleID'] = ApiClient.convertToType(data['dependencyRuleID'], 'Number');
      }
      if (data.hasOwnProperty('dependencyGroup')) {
        obj['dependencyGroup'] = ApiClient.convertToType(data['dependencyGroup'], 'String');
      }
      if (data.hasOwnProperty('frequency')) {
        obj['frequency'] = ApiClient.convertToType(data['frequency'], 'Number');
      }
      if (data.hasOwnProperty('timeFrame')) {
        obj['timeFrame'] = ApiClient.convertToType(data['timeFrame'], 'Number');
      }
      if (data.hasOwnProperty('ruleXML')) {
        obj['ruleXML'] = ApiClient.convertToType(data['ruleXML'], 'String');
      }
      if (data.hasOwnProperty('logFiles')) {
        obj['logFiles'] = LogFiles.constructFromObject(data['logFiles']);
      }
      if (data.hasOwnProperty('alertEnabled')) {
        obj['alertEnabled'] = ApiClient.convertToType(data['alertEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('alertMinimumSeverity')) {
        obj['alertMinimumSeverity'] = ApiClient.convertToType(data['alertMinimumSeverity'], 'Number');
      }
      if (data.hasOwnProperty('recommendationsMode')) {
        obj['recommendationsMode'] = ApiClient.convertToType(data['recommendationsMode'], 'String');
      }
      if (data.hasOwnProperty('sortOrder')) {
        obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
      }
      if (data.hasOwnProperty('canBeAssignedAlone')) {
        obj['canBeAssignedAlone'] = ApiClient.convertToType(data['canBeAssignedAlone'], 'Boolean');
      }
      if (data.hasOwnProperty('dependsOnRuleIDs')) {
        obj['dependsOnRuleIDs'] = ApiClient.convertToType(data['dependsOnRuleIDs'], ['Number']);
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Name of the log inspection rule. Searchable as String.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Description of the log inspection rule that appears in search results, and on the General tab in the Deep Security Manager user interface. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Minimum Deep Security Agent version required by the log inspection rule. Searchable as String.
   * @member {String} minimumAgentVersion
   */
  exports.prototype['minimumAgentVersion'] = undefined;
  /**
   * Minimumn Deep Security Manager version required by the log inspection rule. Searchable as String.
   * @member {String} minimumManagerVersion
   */
  exports.prototype['minimumManagerVersion'] = undefined;
  /**
   * Type of the log inspection rule. The value 'Defined' is used for log inspection rules provided by Trend Micro. Searchable as String.
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Creation timestamp of the log inspection rule, measured in milliseconds since epoch. Searchable as Date.
   * @member {Number} originalIssue
   */
  exports.prototype['originalIssue'] = undefined;
  /**
   * Update timestamp of the log inspection rule, measured in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastUpdated
   */
  exports.prototype['lastUpdated'] = undefined;
  /**
   * Indentifier of the log inspection rule used in the Deep Security Manager user interface. Searchable as String.
   * @member {String} identifier
   */
  exports.prototype['identifier'] = undefined;
  /**
   * Template used to create this rule.
   * @member {module:model/LogInspectionRule.TemplateEnum} template
   */
  exports.prototype['template'] = undefined;
  /**
   * ID of the log inspection rule sent to the Deep Security Agent. The values 100000 - 109999 are reserved for user-definded rules.
   * @member {Number} ruleID
   */
  exports.prototype['ruleID'] = undefined;
  /**
   * Log level of the log inspection rule indicates severity of attack. Level 0 is the least severe and will not log an event. Level 15 is the most severe.
   * @member {Number} level
   */
  exports.prototype['level'] = undefined;
  /**
   * Groups that the log inspection rule is assigned to, separated by commas. Useful when dependency is used as it's possible to create a log inspection rule that fires when another log inspection rule belonging to a specific group fires.
   * @member {Array.<String>} groups
   */
  exports.prototype['groups'] = undefined;
  /**
   * Description of the log inspection rule that appears on events and the Content tab in the Deep Security Manager user interface. Alternatively, you can configure this by inserting a description in 'ruleXML'.
   * @member {String} ruleDescription
   */
  exports.prototype['ruleDescription'] = undefined;
  /**
   * Regular expression pattern the log inspection rule will look for in the logs. The rule will be triggered on a match. Open Source HIDS SEcurity (OSSEC) regular expression syntax is supported, see http://www.ossec.net/docs/syntax/regex.html.
   * @member {String} pattern
   */
  exports.prototype['pattern'] = undefined;
  /**
   * Pattern the log inspection rule will look for in the logs. The string matching pattern is faster than the regex pattern.
   * @member {module:model/LogInspectionRule.PatternTypeEnum} patternType
   */
  exports.prototype['patternType'] = undefined;
  /**
   * Indicates if a dependant rule or dependency group is set or not. If set, the log inspection rule will only log an event if the dependency is triggered. Available for user-defined rules.
   * @member {module:model/LogInspectionRule.DependencyEnum} dependency
   */
  exports.prototype['dependency'] = undefined;
  /**
   * If dependency is configured, the ID of the rule that this rule is dependant on. Ignored if the rule is from Trend Micro, which uses `dependsOnRuleIDs` instead.
   * @member {Number} dependencyRuleID
   */
  exports.prototype['dependencyRuleID'] = undefined;
  /**
   * If dependency is configured, the dependancy groups that this rule is dependant on.
   * @member {String} dependencyGroup
   */
  exports.prototype['dependencyGroup'] = undefined;
  /**
   * Number of times the dependant rule has to match within a specific time frame before the rule is triggered.
   * @member {Number} frequency
   */
  exports.prototype['frequency'] = undefined;
  /**
   * Time period for the frequency of log inspection rule triggers that will generate an event, in seconds.
   * @member {Number} timeFrame
   */
  exports.prototype['timeFrame'] = undefined;
  /**
   * Log inspection rule in an XML format. For information on the XML format, see http://ossec-docs.readthedocs.io/en/latest/syntax/head_rules.html
   * @member {String} ruleXML
   */
  exports.prototype['ruleXML'] = undefined;
  /**
   * Collection of log files monitored by the log inspection rule.
   * @member {module:model/LogFiles} logFiles
   */
  exports.prototype['logFiles'] = undefined;
  /**
   * Controls whether to raise an alert when a log inspection rule logs an event. Use true to raise an alert. Searchable as Boolean.
   * @member {Boolean} alertEnabled
   */
  exports.prototype['alertEnabled'] = undefined;
  /**
   * Severity level that will trigger an alert. Ignored unless `ruleXML` contains multiple rules with different severities, and so you must indicate which severity level to use. Searchable as Numeric.
   * @member {Number} alertMinimumSeverity
   */
  exports.prototype['alertMinimumSeverity'] = undefined;
  /**
   * Indicates if the log inspection rule will be recommended or not. Use the enabled option to recommend this rule. Searchable as Choice.
   * @member {module:model/LogInspectionRule.RecommendationsModeEnum} recommendationsMode
   */
  exports.prototype['recommendationsMode'] = undefined;
  /**
   * Order in which log inspection rules are sent to the Deep Security Agent. Log inspeciton rules are sent in ascending order. Valid values are between 10000 and 20000.
   * @member {Number} sortOrder
   */
  exports.prototype['sortOrder'] = undefined;
  /**
   * Indicates whether this log inspection rule can be allocated without allocating any additional log inspection rules. Ignored if the rule is user-defined, which uses `dependency` instead.
   * @member {Boolean} canBeAssignedAlone
   */
  exports.prototype['canBeAssignedAlone'] = undefined;
  /**
   * IDs of log inspection rules, separated by commas, that are required by this rule. Ignored if the rule is user-defined, which uses `dependencyRuleID` or `dependencyGroup` instead.
   * @member {Array.<Number>} dependsOnRuleIDs
   */
  exports.prototype['dependsOnRuleIDs'] = undefined;
  /**
   * ID of the log inspection rule. This number is set automatically. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;


  /**
   * Allowed values for the <code>template</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TemplateEnum = {
    /**
     * value: "basic-rule"
     * @const
     */
    "basic-rule": "basic-rule",
    /**
     * value: "custom"
     * @const
     */
    "custom": "custom"  };

  /**
   * Allowed values for the <code>patternType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PatternTypeEnum = {
    /**
     * value: "string"
     * @const
     */
    "string": "string",
    /**
     * value: "regex"
     * @const
     */
    "regex": "regex"  };

  /**
   * Allowed values for the <code>dependency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DependencyEnum = {
    /**
     * value: "none"
     * @const
     */
    "none": "none",
    /**
     * value: "rule"
     * @const
     */
    "rule": "rule",
    /**
     * value: "group"
     * @const
     */
    "group": "group"  };

  /**
   * Allowed values for the <code>recommendationsMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RecommendationsModeEnum = {
    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",
    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled",
    /**
     * value: "ignored"
     * @const
     */
    "ignored": "ignored",
    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled"  };


  return exports;
}));



