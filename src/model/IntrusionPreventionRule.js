/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.IntrusionPreventionRule = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The IntrusionPreventionRule model module.
   * @module model/IntrusionPreventionRule
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>IntrusionPreventionRule</code>.
   * Intrusion Prevention rule details. Intrusion prevention rules define a set of conditions that are compared to the payload session and application layers of network packets (such as DNS, HTTP, SSL, and SMTP), as well as the sequence of those packets according to those higher-layer protocols.
   * @alias module:model/IntrusionPreventionRule
   * @class
   */
  var exports = function() {
    var _this = this;


































  };

  /**
   * Constructs a <code>IntrusionPreventionRule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IntrusionPreventionRule} obj Optional instance to populate.
   * @return {module:model/IntrusionPreventionRule} The populated <code>IntrusionPreventionRule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('minimumAgentVersion')) {
        obj['minimumAgentVersion'] = ApiClient.convertToType(data['minimumAgentVersion'], 'String');
      }
      if (data.hasOwnProperty('applicationTypeID')) {
        obj['applicationTypeID'] = ApiClient.convertToType(data['applicationTypeID'], 'Number');
      }
      if (data.hasOwnProperty('priority')) {
        obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
      }
      if (data.hasOwnProperty('severity')) {
        obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
      }
      if (data.hasOwnProperty('detectOnly')) {
        obj['detectOnly'] = ApiClient.convertToType(data['detectOnly'], 'Boolean');
      }
      if (data.hasOwnProperty('eventLoggingDisabled')) {
        obj['eventLoggingDisabled'] = ApiClient.convertToType(data['eventLoggingDisabled'], 'Boolean');
      }
      if (data.hasOwnProperty('generateEventOnPacketDrop')) {
        obj['generateEventOnPacketDrop'] = ApiClient.convertToType(data['generateEventOnPacketDrop'], 'Boolean');
      }
      if (data.hasOwnProperty('alwaysIncludePacketData')) {
        obj['alwaysIncludePacketData'] = ApiClient.convertToType(data['alwaysIncludePacketData'], 'Boolean');
      }
      if (data.hasOwnProperty('debugModeEnabled')) {
        obj['debugModeEnabled'] = ApiClient.convertToType(data['debugModeEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('originalIssue')) {
        obj['originalIssue'] = ApiClient.convertToType(data['originalIssue'], 'Number');
      }
      if (data.hasOwnProperty('lastUpdated')) {
        obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Number');
      }
      if (data.hasOwnProperty('identifier')) {
        obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
      }
      if (data.hasOwnProperty('template')) {
        obj['template'] = ApiClient.convertToType(data['template'], 'String');
      }
      if (data.hasOwnProperty('signature')) {
        obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
      }
      if (data.hasOwnProperty('start')) {
        obj['start'] = ApiClient.convertToType(data['start'], 'String');
      }
      if (data.hasOwnProperty('patterns')) {
        obj['patterns'] = ApiClient.convertToType(data['patterns'], ['String']);
      }
      if (data.hasOwnProperty('end')) {
        obj['end'] = ApiClient.convertToType(data['end'], 'String');
      }
      if (data.hasOwnProperty('caseSensitive')) {
        obj['caseSensitive'] = ApiClient.convertToType(data['caseSensitive'], 'Boolean');
      }
      if (data.hasOwnProperty('condition')) {
        obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
      }
      if (data.hasOwnProperty('action')) {
        obj['action'] = ApiClient.convertToType(data['action'], 'String');
      }
      if (data.hasOwnProperty('customXML')) {
        obj['customXML'] = ApiClient.convertToType(data['customXML'], 'String');
      }
      if (data.hasOwnProperty('alertEnabled')) {
        obj['alertEnabled'] = ApiClient.convertToType(data['alertEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('scheduleID')) {
        obj['scheduleID'] = ApiClient.convertToType(data['scheduleID'], 'Number');
      }
      if (data.hasOwnProperty('contextID')) {
        obj['contextID'] = ApiClient.convertToType(data['contextID'], 'Number');
      }
      if (data.hasOwnProperty('recommendationsMode')) {
        obj['recommendationsMode'] = ApiClient.convertToType(data['recommendationsMode'], 'String');
      }
      if (data.hasOwnProperty('canBeAssignedAlone')) {
        obj['canBeAssignedAlone'] = ApiClient.convertToType(data['canBeAssignedAlone'], 'Boolean');
      }
      if (data.hasOwnProperty('dependsOnRuleIDs')) {
        obj['dependsOnRuleIDs'] = ApiClient.convertToType(data['dependsOnRuleIDs'], ['Number']);
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
      if (data.hasOwnProperty('CVE')) {
        obj['CVE'] = ApiClient.convertToType(data['CVE'], ['String']);
      }
      if (data.hasOwnProperty('CVSSScore')) {
        obj['CVSSScore'] = ApiClient.convertToType(data['CVSSScore'], 'String');
      }
    }
    return obj;
  }

  /**
   * Name of the IntrusionPreventionRule. Searchable as String.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Description of the IntrusionPreventionRule. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Version of the Deep Security agent or appliance required to support the rule. Searchable as String.
   * @member {String} minimumAgentVersion
   */
  exports.prototype['minimumAgentVersion'] = undefined;
  /**
   * ID of the application type for the IntrusionPreventionRule. Searchable as Numeric.
   * @member {Number} applicationTypeID
   */
  exports.prototype['applicationTypeID'] = undefined;
  /**
   * Priority level of the rule. Higher priority rules are applied before lower priority rules. Searchable as Choice.
   * @member {module:model/IntrusionPreventionRule.PriorityEnum} priority
   */
  exports.prototype['priority'] = undefined;
  /**
   * Severity level of the rule. Severity levels can be used as sorting criteria and affect event rankings. Searchable as Choice.
   * @member {module:model/IntrusionPreventionRule.SeverityEnum} severity
   */
  exports.prototype['severity'] = undefined;
  /**
   * In detect mode, the rule creates an event log and does not interfere with traffic.
   * @member {Boolean} detectOnly
   */
  exports.prototype['detectOnly'] = undefined;
  /**
   * Enable to prevent event logs from being created when the rule is triggered. Not available if detectOnly is true. Searchable as Boolean.
   * @member {Boolean} eventLoggingDisabled
   */
  exports.prototype['eventLoggingDisabled'] = undefined;
  /**
   * Generate an event every time a packet is dropped for the rule. Not available if eventLoggingDisabled is true. Searchable as Boolean.
   * @member {Boolean} generateEventOnPacketDrop
   */
  exports.prototype['generateEventOnPacketDrop'] = undefined;
  /**
   * Enabled to include package data in the event logs. Not available if eventLoggingDisabled is true. Searchable as Boolean.
   * @member {Boolean} alwaysIncludePacketData
   */
  exports.prototype['alwaysIncludePacketData'] = undefined;
  /**
   * Enable to log additional packets preceeding and following the packet that the rule detected. Not available if eventLoggingDisabled is true. Searchable as Boolean.
   * @member {Boolean} debugModeEnabled
   */
  exports.prototype['debugModeEnabled'] = undefined;
  /**
   * Type of IntrusionPreventionRule. Searchable as Choice.
   * @member {module:model/IntrusionPreventionRule.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Timestamp of the date the rule was released, in milliseconds since epoch. Searchable as Date.
   * @member {Number} originalIssue
   */
  exports.prototype['originalIssue'] = undefined;
  /**
   * Timestamp of the last rule modification, in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastUpdated
   */
  exports.prototype['lastUpdated'] = undefined;
  /**
   * Unique identification tag of the rule. Searchable as String.
   * @member {String} identifier
   */
  exports.prototype['identifier'] = undefined;
  /**
   * Type of template for the IntrusionPreventionRule. Applicable only to custom rules.
   * @member {module:model/IntrusionPreventionRule.TemplateEnum} template
   */
  exports.prototype['template'] = undefined;
  /**
   * Signature of the rule. Applicable to custom rules with template type signature.
   * @member {String} signature
   */
  exports.prototype['signature'] = undefined;
  /**
   * Start pattern of the rule. Applicable to custom rules with template type start-end-patterns.
   * @member {String} start
   */
  exports.prototype['start'] = undefined;
  /**
   * Body patterns of the rule, which must be found between start and end patterns. Applicable to custom rules with template type start-end-patterns.
   * @member {Array.<String>} patterns
   */
  exports.prototype['patterns'] = undefined;
  /**
   * End pattern of the rule. Applicable to custom rules with template type start-end-patterns.
   * @member {String} end
   */
  exports.prototype['end'] = undefined;
  /**
   * Enable to make signatures and patterns case sensitive. Applicable to custom rules with template type signature or start-end-patterns.
   * @member {Boolean} caseSensitive
   */
  exports.prototype['caseSensitive'] = undefined;
  /**
   * Condition to determine if the rule is triggered. Applicable to custom rules with template type start-end-patterns.
   * @member {module:model/IntrusionPreventionRule.ConditionEnum} condition
   */
  exports.prototype['condition'] = undefined;
  /**
   * Action to apply if the rule is triggered. Applicable to custom rules with template type signature or start-end-patterns.
   * @member {module:model/IntrusionPreventionRule.ActionEnum} action
   */
  exports.prototype['action'] = undefined;
  /**
   * The custom XML used to define the rule. Applicable to custom rules with template type custom.
   * @member {String} customXML
   */
  exports.prototype['customXML'] = undefined;
  /**
   * Enable to raise an alert when the rule logs an event. Searchable as Boolean.
   * @member {Boolean} alertEnabled
   */
  exports.prototype['alertEnabled'] = undefined;
  /**
   * ID of the schedule which defines times during which the rule is active. Searchable as Numeric.
   * @member {Number} scheduleID
   */
  exports.prototype['scheduleID'] = undefined;
  /**
   * ID of the context in which the rule is applied. Searchable as Numeric.
   * @member {Number} contextID
   */
  exports.prototype['contextID'] = undefined;
  /**
   * Indicates whether recommendation scans consider the rule. To avoid errors on existing rules, only change the value between enabled (rule is included in recommendations scan) and ignored (rule is ignored by recommendations scan). Other values (disabled or ignored) indicate that the rule is not supported by recommendation scans. Searchable as Choice.
   * @member {module:model/IntrusionPreventionRule.RecommendationsModeEnum} recommendationsMode
   */
  exports.prototype['recommendationsMode'] = undefined;
  /**
   * True when the rule has no dependencies.
   * @member {Boolean} canBeAssignedAlone
   */
  exports.prototype['canBeAssignedAlone'] = undefined;
  /**
   * IDs of intrusion prevention rules the rule depends on, which will be automatically assigned if this rule is assigned.
   * @member {Array.<Number>} dependsOnRuleIDs
   */
  exports.prototype['dependsOnRuleIDs'] = undefined;
  /**
   * ID of the IntrusionPreventionRule. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * List of CVEs associated with the IntrusionPreventionRule. Searchable as String.
   * @member {Array.<String>} CVE
   */
  exports.prototype['CVE'] = undefined;
  /**
   * @member {String} CVSSScore
   */
  exports.prototype['CVSSScore'] = undefined;


  /**
   * Allowed values for the <code>priority</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PriorityEnum = {
    /**
     * value: "lowest"
     * @const
     */
    "lowest": "lowest",
    /**
     * value: "low"
     * @const
     */
    "low": "low",
    /**
     * value: "normal"
     * @const
     */
    "normal": "normal",
    /**
     * value: "high"
     * @const
     */
    "high": "high",
    /**
     * value: "highest"
     * @const
     */
    "highest": "highest"  };

  /**
   * Allowed values for the <code>severity</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SeverityEnum = {
    /**
     * value: "low"
     * @const
     */
    "low": "low",
    /**
     * value: "medium"
     * @const
     */
    "medium": "medium",
    /**
     * value: "high"
     * @const
     */
    "high": "high",
    /**
     * value: "critical"
     * @const
     */
    "critical": "critical"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "custom"
     * @const
     */
    "custom": "custom",
    /**
     * value: "smart"
     * @const
     */
    "smart": "smart",
    /**
     * value: "vulnerability"
     * @const
     */
    "vulnerability": "vulnerability",
    /**
     * value: "exploit"
     * @const
     */
    "exploit": "exploit",
    /**
     * value: "hidden"
     * @const
     */
    "hidden": "hidden",
    /**
     * value: "policy"
     * @const
     */
    "policy": "policy",
    /**
     * value: "info"
     * @const
     */
    "info": "info"  };

  /**
   * Allowed values for the <code>template</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TemplateEnum = {
    /**
     * value: "signature"
     * @const
     */
    "signature": "signature",
    /**
     * value: "start-end-patterns"
     * @const
     */
    "start-end-patterns": "start-end-patterns",
    /**
     * value: "custom"
     * @const
     */
    "custom": "custom"  };

  /**
   * Allowed values for the <code>condition</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConditionEnum = {
    /**
     * value: "all"
     * @const
     */
    "all": "all",
    /**
     * value: "any"
     * @const
     */
    "any": "any",
    /**
     * value: "none"
     * @const
     */
    "none": "none"  };

  /**
   * Allowed values for the <code>action</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionEnum = {
    /**
     * value: "drop"
     * @const
     */
    "drop": "drop",
    /**
     * value: "log-only"
     * @const
     */
    "log-only": "log-only"  };

  /**
   * Allowed values for the <code>recommendationsMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RecommendationsModeEnum = {
    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",
    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled",
    /**
     * value: "ignored"
     * @const
     */
    "ignored": "ignored",
    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled"  };


  return exports;
}));



