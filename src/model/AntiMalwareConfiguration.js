/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.AntiMalwareConfiguration = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AntiMalwareConfiguration model module.
   * @module model/AntiMalwareConfiguration
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>AntiMalwareConfiguration</code>.
   * Configure protection against malware, viruses, trojans and spyware.
   * @alias module:model/AntiMalwareConfiguration
   * @class
   */
  var exports = function() {
    var _this = this;











































  };

  /**
   * Constructs a <code>AntiMalwareConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AntiMalwareConfiguration} obj Optional instance to populate.
   * @return {module:model/AntiMalwareConfiguration} The populated <code>AntiMalwareConfiguration</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('scanType')) {
        obj['scanType'] = ApiClient.convertToType(data['scanType'], 'String');
      }
      if (data.hasOwnProperty('documentExploitProtectionEnabled')) {
        obj['documentExploitProtectionEnabled'] = ApiClient.convertToType(data['documentExploitProtectionEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('documentExploitProtection')) {
        obj['documentExploitProtection'] = ApiClient.convertToType(data['documentExploitProtection'], 'String');
      }
      if (data.hasOwnProperty('documentExploitHeuristicLevel')) {
        obj['documentExploitHeuristicLevel'] = ApiClient.convertToType(data['documentExploitHeuristicLevel'], 'String');
      }
      if (data.hasOwnProperty('machineLearningEnabled')) {
        obj['machineLearningEnabled'] = ApiClient.convertToType(data['machineLearningEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('behaviorMonitoringEnabled')) {
        obj['behaviorMonitoringEnabled'] = ApiClient.convertToType(data['behaviorMonitoringEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('documentRecoveryEnabled')) {
        obj['documentRecoveryEnabled'] = ApiClient.convertToType(data['documentRecoveryEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('intelliTrapEnabled')) {
        obj['intelliTrapEnabled'] = ApiClient.convertToType(data['intelliTrapEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('memoryScanEnabled')) {
        obj['memoryScanEnabled'] = ApiClient.convertToType(data['memoryScanEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('spywareEnabled')) {
        obj['spywareEnabled'] = ApiClient.convertToType(data['spywareEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('alertEnabled')) {
        obj['alertEnabled'] = ApiClient.convertToType(data['alertEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('directoriesToScan')) {
        obj['directoriesToScan'] = ApiClient.convertToType(data['directoriesToScan'], 'String');
      }
      if (data.hasOwnProperty('directoryListID')) {
        obj['directoryListID'] = ApiClient.convertToType(data['directoryListID'], 'Number');
      }
      if (data.hasOwnProperty('filesToScan')) {
        obj['filesToScan'] = ApiClient.convertToType(data['filesToScan'], 'String');
      }
      if (data.hasOwnProperty('fileExtensionListID')) {
        obj['fileExtensionListID'] = ApiClient.convertToType(data['fileExtensionListID'], 'Number');
      }
      if (data.hasOwnProperty('excludedDirectoryListID')) {
        obj['excludedDirectoryListID'] = ApiClient.convertToType(data['excludedDirectoryListID'], 'Number');
      }
      if (data.hasOwnProperty('excludedFileListID')) {
        obj['excludedFileListID'] = ApiClient.convertToType(data['excludedFileListID'], 'Number');
      }
      if (data.hasOwnProperty('excludedFileExtensionListID')) {
        obj['excludedFileExtensionListID'] = ApiClient.convertToType(data['excludedFileExtensionListID'], 'Number');
      }
      if (data.hasOwnProperty('excludedProcessImageFileListID')) {
        obj['excludedProcessImageFileListID'] = ApiClient.convertToType(data['excludedProcessImageFileListID'], 'Number');
      }
      if (data.hasOwnProperty('realTimeScan')) {
        obj['realTimeScan'] = ApiClient.convertToType(data['realTimeScan'], 'String');
      }
      if (data.hasOwnProperty('scanCompressedEnabled')) {
        obj['scanCompressedEnabled'] = ApiClient.convertToType(data['scanCompressedEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('scanCompressedMaximumSize')) {
        obj['scanCompressedMaximumSize'] = ApiClient.convertToType(data['scanCompressedMaximumSize'], 'Number');
      }
      if (data.hasOwnProperty('scanCompressedMaximumLevels')) {
        obj['scanCompressedMaximumLevels'] = ApiClient.convertToType(data['scanCompressedMaximumLevels'], 'Number');
      }
      if (data.hasOwnProperty('scanCompressedMaximumFiles')) {
        obj['scanCompressedMaximumFiles'] = ApiClient.convertToType(data['scanCompressedMaximumFiles'], 'Number');
      }
      if (data.hasOwnProperty('microsoftOfficeEnabled')) {
        obj['microsoftOfficeEnabled'] = ApiClient.convertToType(data['microsoftOfficeEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('microsoftOfficeLayers')) {
        obj['microsoftOfficeLayers'] = ApiClient.convertToType(data['microsoftOfficeLayers'], 'Number');
      }
      if (data.hasOwnProperty('networkDirectoriesEnabled')) {
        obj['networkDirectoriesEnabled'] = ApiClient.convertToType(data['networkDirectoriesEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('customRemediationActionsEnabled')) {
        obj['customRemediationActionsEnabled'] = ApiClient.convertToType(data['customRemediationActionsEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('customScanActionsEnabled')) {
        obj['customScanActionsEnabled'] = ApiClient.convertToType(data['customScanActionsEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('scanActionForVirus')) {
        obj['scanActionForVirus'] = ApiClient.convertToType(data['scanActionForVirus'], 'String');
      }
      if (data.hasOwnProperty('scanActionForTrojans')) {
        obj['scanActionForTrojans'] = ApiClient.convertToType(data['scanActionForTrojans'], 'String');
      }
      if (data.hasOwnProperty('scanActionForPacker')) {
        obj['scanActionForPacker'] = ApiClient.convertToType(data['scanActionForPacker'], 'String');
      }
      if (data.hasOwnProperty('scanActionForSpyware')) {
        obj['scanActionForSpyware'] = ApiClient.convertToType(data['scanActionForSpyware'], 'String');
      }
      if (data.hasOwnProperty('scanActionForOtherThreats')) {
        obj['scanActionForOtherThreats'] = ApiClient.convertToType(data['scanActionForOtherThreats'], 'String');
      }
      if (data.hasOwnProperty('scanActionForCookies')) {
        obj['scanActionForCookies'] = ApiClient.convertToType(data['scanActionForCookies'], 'String');
      }
      if (data.hasOwnProperty('scanActionForCVE')) {
        obj['scanActionForCVE'] = ApiClient.convertToType(data['scanActionForCVE'], 'String');
      }
      if (data.hasOwnProperty('scanActionForHeuristics')) {
        obj['scanActionForHeuristics'] = ApiClient.convertToType(data['scanActionForHeuristics'], 'String');
      }
      if (data.hasOwnProperty('scanActionForPossibleMalware')) {
        obj['scanActionForPossibleMalware'] = ApiClient.convertToType(data['scanActionForPossibleMalware'], 'String');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
      if (data.hasOwnProperty('cpuUsage')) {
        obj['cpuUsage'] = ApiClient.convertToType(data['cpuUsage'], 'String');
      }
    }
    return obj;
  }

  /**
   * Name of the anti-malware configuration. Searchable as String.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Description of the anti-malware configuration. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The type of malware scan configuration. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanTypeEnum} scanType
   */
  exports.prototype['scanType'] = undefined;
  /**
   * Controls whether to scan for known critical vulnerabilities. Use true to enable scan.
   * @member {Boolean} documentExploitProtectionEnabled
   */
  exports.prototype['documentExploitProtectionEnabled'] = undefined;
  /**
   * Scan for exploits against known critical vulnerabilities only. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.DocumentExploitProtectionEnum} documentExploitProtection
   */
  exports.prototype['documentExploitProtection'] = undefined;
  /**
   * Controls whether to scan for exploits of known critical vulnerabilites as well as aggessively detect suspicious behaviour that could be an unknown exploit. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.DocumentExploitHeuristicLevelEnum} documentExploitHeuristicLevel
   */
  exports.prototype['documentExploitHeuristicLevel'] = undefined;
  /**
   * Controls whether predictive machine learning is enabled.  Set to true to enable. Searchable as Boolean.
   * @member {Boolean} machineLearningEnabled
   */
  exports.prototype['machineLearningEnabled'] = undefined;
  /**
   * Controls whether to detect suspicious activity and unauthorized changes (including ransomware). Set to true to detect.
   * @member {Boolean} behaviorMonitoringEnabled
   */
  exports.prototype['behaviorMonitoringEnabled'] = undefined;
  /**
   * Controls whether to back up ransomware-encrypted files. Set to true to back up. Searchable as Boolean.
   * @member {Boolean} documentRecoveryEnabled
   */
  exports.prototype['documentRecoveryEnabled'] = undefined;
  /**
   * Controls whether IntelliTrap is enabled. Set to true to enable. Searchable as Boolean.
   * @member {Boolean} intelliTrapEnabled
   */
  exports.prototype['intelliTrapEnabled'] = undefined;
  /**
   * Controls whether to scan process memory for malware. Use true to enable scan. Searchable as Boolean.
   * @member {Boolean} memoryScanEnabled
   */
  exports.prototype['memoryScanEnabled'] = undefined;
  /**
   * Controls whether to enable spyware/grayware protection. Set to true to enable. Searchable as Boolean.
   * @member {Boolean} spywareEnabled
   */
  exports.prototype['spywareEnabled'] = undefined;
  /**
   * Controls whether to create an alert when the Malware Scan Configuration logs an event. Set to true to enable the alert. Searchable as Boolean.
   * @member {Boolean} alertEnabled
   */
  exports.prototype['alertEnabled'] = undefined;
  /**
   * Specify if the scan will be peformed on all the directories or on a subset. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.DirectoriesToScanEnum} directoriesToScan
   */
  exports.prototype['directoriesToScan'] = undefined;
  /**
   * ID of the directory list to scan. Searchable as Numeric.
   * @member {Number} directoryListID
   */
  exports.prototype['directoryListID'] = undefined;
  /**
   * Specify if scan will be performed on all files, a subset or by using ItelliScan. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.FilesToScanEnum} filesToScan
   */
  exports.prototype['filesToScan'] = undefined;
  /**
   * ID of the file extension list to scan. Searchable as Numeric.
   * @member {Number} fileExtensionListID
   */
  exports.prototype['fileExtensionListID'] = undefined;
  /**
   * ID of the directory list to exclude from the scan. Searchable as Numeric.
   * @member {Number} excludedDirectoryListID
   */
  exports.prototype['excludedDirectoryListID'] = undefined;
  /**
   * ID of the file list to exclude from the scan. Searchable as Numeric.
   * @member {Number} excludedFileListID
   */
  exports.prototype['excludedFileListID'] = undefined;
  /**
   * ID of the file extension list to exclude from the scan. Searchable as Numeric.
   * @member {Number} excludedFileExtensionListID
   */
  exports.prototype['excludedFileExtensionListID'] = undefined;
  /**
   * ID of the process image file list to exclude from the scan. Searchable as Numeric.
   * @member {Number} excludedProcessImageFileListID
   */
  exports.prototype['excludedProcessImageFileListID'] = undefined;
  /**
   * Specify when to perform the real-time scan. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.RealTimeScanEnum} realTimeScan
   */
  exports.prototype['realTimeScan'] = undefined;
  /**
   * Controls whether to scan compressed files. Use true to enable scan. Searchable as Boolean.
   * @member {Boolean} scanCompressedEnabled
   */
  exports.prototype['scanCompressedEnabled'] = undefined;
  /**
   * Maximum size of compressed files to scan, in MB. Searchable as Numeric.
   * @member {Number} scanCompressedMaximumSize
   */
  exports.prototype['scanCompressedMaximumSize'] = undefined;
  /**
   * The maximum number of levels of compression to scan. Searchable as Numeric.
   * @member {Number} scanCompressedMaximumLevels
   */
  exports.prototype['scanCompressedMaximumLevels'] = undefined;
  /**
   * Maximum number of files to extract. Searchable as Numeric.
   * @member {Number} scanCompressedMaximumFiles
   */
  exports.prototype['scanCompressedMaximumFiles'] = undefined;
  /**
   * Controls whether to scan Embedded Microsoft Office Objects. Use true to enable scan. Searchable as Boolean.
   * @member {Boolean} microsoftOfficeEnabled
   */
  exports.prototype['microsoftOfficeEnabled'] = undefined;
  /**
   * Number of Microsoft Object Linking and Embedding (OLE) Layers to scan. Searchable as Numeric.
   * @member {Number} microsoftOfficeLayers
   */
  exports.prototype['microsoftOfficeLayers'] = undefined;
  /**
   * Controls whether to scan network directories. Set to true to enable. Searchable as Boolean.
   * @member {Boolean} networkDirectoriesEnabled
   */
  exports.prototype['networkDirectoriesEnabled'] = undefined;
  /**
   * Controls whether to use the action ActiveActions recommends when malware is detected. Set to true to use the action ActiveAction recommends.
   * @member {Boolean} customRemediationActionsEnabled
   */
  exports.prototype['customRemediationActionsEnabled'] = undefined;
  /**
   * Controls whether to use custom actions. Use true to enable custom actions.
   * @member {Boolean} customScanActionsEnabled
   */
  exports.prototype['customScanActionsEnabled'] = undefined;
  /**
   * The action to perform when a virus is detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForVirusEnum} scanActionForVirus
   */
  exports.prototype['scanActionForVirus'] = undefined;
  /**
   * The action to perform when a trojan is detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForTrojansEnum} scanActionForTrojans
   */
  exports.prototype['scanActionForTrojans'] = undefined;
  /**
   * The action to perform when a packer is detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForPackerEnum} scanActionForPacker
   */
  exports.prototype['scanActionForPacker'] = undefined;
  /**
   * The action to perform when spyware is detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForSpywareEnum} scanActionForSpyware
   */
  exports.prototype['scanActionForSpyware'] = undefined;
  /**
   * The action to take when other threats are detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForOtherThreatsEnum} scanActionForOtherThreats
   */
  exports.prototype['scanActionForOtherThreats'] = undefined;
  /**
   * The action to take when cookies are detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForCookiesEnum} scanActionForCookies
   */
  exports.prototype['scanActionForCookies'] = undefined;
  /**
   * The action to take when a CVE exploit is detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForCVEEnum} scanActionForCVE
   */
  exports.prototype['scanActionForCVE'] = undefined;
  /**
   * The action to take when malware identified with heuristics are detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForHeuristicsEnum} scanActionForHeuristics
   */
  exports.prototype['scanActionForHeuristics'] = undefined;
  /**
   * The action to take when possible malware is detected. Searchable as Choice.
   * @member {module:model/AntiMalwareConfiguration.ScanActionForPossibleMalwareEnum} scanActionForPossibleMalware
   */
  exports.prototype['scanActionForPossibleMalware'] = undefined;
  /**
   * ID of the anti-malware configuration. This ID is set automatically. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * @member {module:model/AntiMalwareConfiguration.CpuUsageEnum} cpuUsage
   */
  exports.prototype['cpuUsage'] = undefined;


  /**
   * Allowed values for the <code>scanType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanTypeEnum = {
    /**
     * value: "real-time"
     * @const
     */
    "real-time": "real-time",
    /**
     * value: "on-demand"
     * @const
     */
    "on-demand": "on-demand"  };

  /**
   * Allowed values for the <code>documentExploitProtection</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DocumentExploitProtectionEnum = {
    /**
     * value: "critical-only"
     * @const
     */
    "only": "critical-only",
    /**
     * value: "critical-and-heuristic"
     * @const
     */
    "and-heuristic": "critical-and-heuristic"  };

  /**
   * Allowed values for the <code>documentExploitHeuristicLevel</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DocumentExploitHeuristicLevelEnum = {
    /**
     * value: "default"
     * @const
     */
    "default": "default",
    /**
     * value: "default-and-agressive"
     * @const
     */
    "default-and-agressive": "default-and-agressive"  };

  /**
   * Allowed values for the <code>directoriesToScan</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DirectoriesToScanEnum = {
    /**
     * value: "all-directories"
     * @const
     */
    "all-directories": "all-directories",
    /**
     * value: "directory-list"
     * @const
     */
    "directory-list": "directory-list"  };

  /**
   * Allowed values for the <code>filesToScan</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FilesToScanEnum = {
    /**
     * value: "all-files"
     * @const
     */
    "all-files": "all-files",
    /**
     * value: "intelliscan-file-types"
     * @const
     */
    "intelliscan-file-types": "intelliscan-file-types",
    /**
     * value: "file-extension-list"
     * @const
     */
    "file-extension-list": "file-extension-list"  };

  /**
   * Allowed values for the <code>realTimeScan</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RealTimeScanEnum = {
    /**
     * value: "read-only"
     * @const
     */
    "read-only": "read-only",
    /**
     * value: "write-only"
     * @const
     */
    "write-only": "write-only",
    /**
     * value: "read-write"
     * @const
     */
    "read-write": "read-write"  };

  /**
   * Allowed values for the <code>scanActionForVirus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForVirusEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "clean"
     * @const
     */
    "clean": "clean",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForTrojans</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForTrojansEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForPacker</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForPackerEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForSpyware</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForSpywareEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForOtherThreats</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForOtherThreatsEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "clean"
     * @const
     */
    "clean": "clean",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForCookies</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForCookiesEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"  };

  /**
   * Allowed values for the <code>scanActionForCVE</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForCVEEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForHeuristics</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForHeuristicsEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>scanActionForPossibleMalware</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanActionForPossibleMalwareEnum = {
    /**
     * value: "active-action"
     * @const
     */
    "active-action": "active-action",
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",
    /**
     * value: "quarantine"
     * @const
     */
    "quarantine": "quarantine",
    /**
     * value: "deny-access"
     * @const
     */
    "deny-access": "deny-access"  };

  /**
   * Allowed values for the <code>cpuUsage</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CpuUsageEnum = {
    /**
     * value: "low"
     * @const
     */
    "low": "low",
    /**
     * value: "medium"
     * @const
     */
    "medium": "medium",
    /**
     * value: "high"
     * @const
     */
    "high": "high"  };


  return exports;
}));



