/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.Administrator = factory(root.Deepsecurity.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Administrator model module.
   * @module model/Administrator
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>Administrator</code>.
   * Administrator details. An Administrator object represents a Deep Security user.
   * @alias module:model/Administrator
   * @class
   */
  var exports = function() {
    var _this = this;

































  };

  /**
   * Constructs a <code>Administrator</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Administrator} obj Optional instance to populate.
   * @return {module:model/Administrator} The populated <code>Administrator</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('username')) {
        obj['username'] = ApiClient.convertToType(data['username'], 'String');
      }
      if (data.hasOwnProperty('password')) {
        obj['password'] = ApiClient.convertToType(data['password'], 'String');
      }
      if (data.hasOwnProperty('fullName')) {
        obj['fullName'] = ApiClient.convertToType(data['fullName'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('roleID')) {
        obj['roleID'] = ApiClient.convertToType(data['roleID'], 'Number');
      }
      if (data.hasOwnProperty('locale')) {
        obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
      }
      if (data.hasOwnProperty('timeZone')) {
        obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
      }
      if (data.hasOwnProperty('timeFormat')) {
        obj['timeFormat'] = ApiClient.convertToType(data['timeFormat'], 'String');
      }
      if (data.hasOwnProperty('passwordNeverExpires')) {
        obj['passwordNeverExpires'] = ApiClient.convertToType(data['passwordNeverExpires'], 'Boolean');
      }
      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('mfaType')) {
        obj['mfaType'] = ApiClient.convertToType(data['mfaType'], 'String');
      }
      if (data.hasOwnProperty('phoneNumber')) {
        obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
      }
      if (data.hasOwnProperty('mobileNumber')) {
        obj['mobileNumber'] = ApiClient.convertToType(data['mobileNumber'], 'String');
      }
      if (data.hasOwnProperty('pagerNumber')) {
        obj['pagerNumber'] = ApiClient.convertToType(data['pagerNumber'], 'String');
      }
      if (data.hasOwnProperty('emailAddress')) {
        obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
      }
      if (data.hasOwnProperty('primaryContact')) {
        obj['primaryContact'] = ApiClient.convertToType(data['primaryContact'], 'Boolean');
      }
      if (data.hasOwnProperty('receiveNotifications')) {
        obj['receiveNotifications'] = ApiClient.convertToType(data['receiveNotifications'], 'Boolean');
      }
      if (data.hasOwnProperty('reportPDFPasswordEnabled')) {
        obj['reportPDFPasswordEnabled'] = ApiClient.convertToType(data['reportPDFPasswordEnabled'], 'Boolean');
      }
      if (data.hasOwnProperty('reportPDFPassword')) {
        obj['reportPDFPassword'] = ApiClient.convertToType(data['reportPDFPassword'], 'String');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Number');
      }
      if (data.hasOwnProperty('lastPasswordChange')) {
        obj['lastPasswordChange'] = ApiClient.convertToType(data['lastPasswordChange'], 'Number');
      }
      if (data.hasOwnProperty('lastSignIn')) {
        obj['lastSignIn'] = ApiClient.convertToType(data['lastSignIn'], 'Number');
      }
      if (data.hasOwnProperty('unlockTime')) {
        obj['unlockTime'] = ApiClient.convertToType(data['unlockTime'], 'Number');
      }
      if (data.hasOwnProperty('unsuccessfulSignInAttempts')) {
        obj['unsuccessfulSignInAttempts'] = ApiClient.convertToType(data['unsuccessfulSignInAttempts'], 'Number');
      }
      if (data.hasOwnProperty('directoryName')) {
        obj['directoryName'] = ApiClient.convertToType(data['directoryName'], 'String');
      }
      if (data.hasOwnProperty('directoryInfo')) {
        obj['directoryInfo'] = ApiClient.convertToType(data['directoryInfo'], 'String');
      }
      if (data.hasOwnProperty('external')) {
        obj['external'] = ApiClient.convertToType(data['external'], 'Boolean');
      }
      if (data.hasOwnProperty('externalUserID')) {
        obj['externalUserID'] = ApiClient.convertToType(data['externalUserID'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('readOnly')) {
        obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
      if (data.hasOwnProperty('UTCOffset')) {
        obj['UTCOffset'] = ApiClient.convertToType(data['UTCOffset'], 'String');
      }
    }
    return obj;
  }

  /**
   * Username of the Administrator. Searchable as String.
   * @member {String} username
   */
  exports.prototype['username'] = undefined;
  /**
   * Password of the Administrator.
   * @member {String} password
   */
  exports.prototype['password'] = undefined;
  /**
   * Full name of the Administrator. Searchable as String.
   * @member {String} fullName
   */
  exports.prototype['fullName'] = undefined;
  /**
   * Description of the Administrator. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * ID of the role assigned to the Administrator. Searchable as Numeric.
   * @member {Number} roleID
   */
  exports.prototype['roleID'] = undefined;
  /**
   * Locale of the Administrator.
   * @member {module:model/Administrator.LocaleEnum} locale
   */
  exports.prototype['locale'] = undefined;
  /**
   * Time zone of the Administrator. Searchable as String.
   * @member {String} timeZone
   */
  exports.prototype['timeZone'] = undefined;
  /**
   * Time format preference of the Administrator. Can be either the 12-hour format or the 24-hour format. Searchable as Choice.
   * @member {module:model/Administrator.TimeFormatEnum} timeFormat
   */
  exports.prototype['timeFormat'] = undefined;
  /**
   * Enabled if the Administrator's password never expires. Defaults to `false`. Searchable as Boolean.
   * @member {Boolean} passwordNeverExpires
   */
  exports.prototype['passwordNeverExpires'] = undefined;
  /**
   * If set to `true`, the Administrator can authenticate. If set to `false`, the Administrator is locked out. Searchable as Boolean.
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * Specifies the type of multi-factor authentication used to authenticate the Administrator. Defaults to `none`. Searchable as Choice.
   * @member {module:model/Administrator.MfaTypeEnum} mfaType
   */
  exports.prototype['mfaType'] = undefined;
  /**
   * Phone number of the Administrator. Searchable as String.
   * @member {String} phoneNumber
   */
  exports.prototype['phoneNumber'] = undefined;
  /**
   * Mobile number of the Administrator. Searchable as String.
   * @member {String} mobileNumber
   */
  exports.prototype['mobileNumber'] = undefined;
  /**
   * Pager number of the Administrator. Searchable as String.
   * @member {String} pagerNumber
   */
  exports.prototype['pagerNumber'] = undefined;
  /**
   * Email address of the Administrator. Searchable as String.
   * @member {String} emailAddress
   */
  exports.prototype['emailAddress'] = undefined;
  /**
   * If set to `true`, the administrator is a primary contact. Primary contacts receive Deep Security as a Service account-related emails for that tenant. A valid `emailAddress` is required. Searchable as Boolean.
   * @member {Boolean} primaryContact
   */
  exports.prototype['primaryContact'] = undefined;
  /**
   * If set to `true`, alert emails will be sent to the Administrator. A valid `emailAddress` is required. Searchable as Boolean.
   * @member {Boolean} receiveNotifications
   */
  exports.prototype['receiveNotifications'] = undefined;
  /**
   * Controls whether the reports that the Administrator generates are password-protected. Set to `true` to password-protect, and `false` otherwise. Defaults to `false`. Searchable as Boolean.
   * @member {Boolean} reportPDFPasswordEnabled
   */
  exports.prototype['reportPDFPasswordEnabled'] = undefined;
  /**
   * Password that protects the reports that the Administrator generates. Ignored when `reportPDFPasswordEnabled` is `false`.
   * @member {String} reportPDFPassword
   */
  exports.prototype['reportPDFPassword'] = undefined;
  /**
   * Timestamp when the Administrator was created, in milliseconds since epoch. Searchable as Date.
   * @member {Number} created
   */
  exports.prototype['created'] = undefined;
  /**
   * Timestamp when the Administrator's password was last changed, in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastPasswordChange
   */
  exports.prototype['lastPasswordChange'] = undefined;
  /**
   * Timestamp when the Administrator last signed in, in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastSignIn
   */
  exports.prototype['lastSignIn'] = undefined;
  /**
   * Timestamp at which the Administrator will be unlocked, in milliseconds since epoch. Ignored if the Administrator is not locked out using a time-based lock out scheme. Searchable as Date.
   * @member {Number} unlockTime
   */
  exports.prototype['unlockTime'] = undefined;
  /**
   * Number of unsuccessful sign-in attempts for the Administrator. This number is reset to `0` when a successful authentication occurs. Searchable as Numeric.
   * @member {Number} unsuccessfulSignInAttempts
   */
  exports.prototype['unsuccessfulSignInAttempts'] = undefined;
  /**
   * Security Account Manager (SAM) account name for the Administrator. Ignored if the Administrator is not managed by an identity provider. Searchable as String.
   * @member {String} directoryName
   */
  exports.prototype['directoryName'] = undefined;
  /**
   * Unique ID used for single sign-on using a Security Account Manager (SAM) identity provider. Ignored if the Administrator is not managed by an identity provider.
   * @member {String} directoryInfo
   */
  exports.prototype['directoryInfo'] = undefined;
  /**
   * If set to `true` the Administrator is externally authenticated using SAML. Defaults to `false`. Ignored if the Administrator is not externally authenticated. Searchable as Boolean.
   * @member {Boolean} external
   */
  exports.prototype['external'] = undefined;
  /**
   * SAML User ID of the Administrator. Used to support external authentication of the Administrator. Ignored if the Administrator is not externally authenticated. Searchable as String.
   * @member {String} externalUserID
   */
  exports.prototype['externalUserID'] = undefined;
  /**
   * Administrator account type. Can either be `normal` or `temporary`. Defaults to `normal`. Searchable as Choice.
   * @member {module:model/Administrator.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Set to `true` if the Administrator is read-only. Defaults to `false`. Searchable as Boolean.
   * @member {Boolean} readOnly
   */
  exports.prototype['readOnly'] = undefined;
  /**
   * ID of the Administrator. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * UTC offset of the Administrator.
   * @member {String} UTCOffset
   */
  exports.prototype['UTCOffset'] = undefined;


  /**
   * Allowed values for the <code>locale</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LocaleEnum = {
    /**
     * value: "en-US"
     * @const
     */
    "en-US": "en-US",
    /**
     * value: "ja-JP"
     * @const
     */
    "ja-JP": "ja-JP"  };

  /**
   * Allowed values for the <code>timeFormat</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TimeFormatEnum = {
    /**
     * value: "12"
     * @const
     */
    "12": "12",
    /**
     * value: "24"
     * @const
     */
    "24": "24"  };

  /**
   * Allowed values for the <code>mfaType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MfaTypeEnum = {
    /**
     * value: "none"
     * @const
     */
    "none": "none",
    /**
     * value: "local-totp"
     * @const
     */
    "local-totp": "local-totp"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "normal"
     * @const
     */
    "normal": "normal",
    /**
     * value: "temporary"
     * @const
     */
    "temporary": "temporary"  };


  return exports;
}));



