/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AdministratorRights', 'model/AdministratorRoleRights', 'model/AlertConfigurationRights', 'model/AlertRights', 'model/ApiKeyRights', 'model/AssetValueRights', 'model/CertificateRights', 'model/ComputerRights', 'model/ContactRights', 'model/DiagnosticRights', 'model/IpListRights', 'model/LicenseRights', 'model/MultiTenantRights', 'model/PolicyRights', 'model/PortListRights', 'model/ProxyRights', 'model/RelayGroupRights', 'model/SamlIdentityProviderRights', 'model/ScanCacheRights', 'model/ScheduleRights', 'model/ScheduledTaskRights', 'model/SettingRights', 'model/SyslogConfigurationRights', 'model/SystemInformationRights', 'model/TaggingRights', 'model/UpdateRights'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AdministratorRights'), require('./AdministratorRoleRights'), require('./AlertConfigurationRights'), require('./AlertRights'), require('./ApiKeyRights'), require('./AssetValueRights'), require('./CertificateRights'), require('./ComputerRights'), require('./ContactRights'), require('./DiagnosticRights'), require('./IpListRights'), require('./LicenseRights'), require('./MultiTenantRights'), require('./PolicyRights'), require('./PortListRights'), require('./ProxyRights'), require('./RelayGroupRights'), require('./SamlIdentityProviderRights'), require('./ScanCacheRights'), require('./ScheduleRights'), require('./ScheduledTaskRights'), require('./SettingRights'), require('./SyslogConfigurationRights'), require('./SystemInformationRights'), require('./TaggingRights'), require('./UpdateRights'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.PlatformRights = factory(root.Deepsecurity.ApiClient, root.Deepsecurity.AdministratorRights, root.Deepsecurity.AdministratorRoleRights, root.Deepsecurity.AlertConfigurationRights, root.Deepsecurity.AlertRights, root.Deepsecurity.ApiKeyRights, root.Deepsecurity.AssetValueRights, root.Deepsecurity.CertificateRights, root.Deepsecurity.ComputerRights, root.Deepsecurity.ContactRights, root.Deepsecurity.DiagnosticRights, root.Deepsecurity.IpListRights, root.Deepsecurity.LicenseRights, root.Deepsecurity.MultiTenantRights, root.Deepsecurity.PolicyRights, root.Deepsecurity.PortListRights, root.Deepsecurity.ProxyRights, root.Deepsecurity.RelayGroupRights, root.Deepsecurity.SamlIdentityProviderRights, root.Deepsecurity.ScanCacheRights, root.Deepsecurity.ScheduleRights, root.Deepsecurity.ScheduledTaskRights, root.Deepsecurity.SettingRights, root.Deepsecurity.SyslogConfigurationRights, root.Deepsecurity.SystemInformationRights, root.Deepsecurity.TaggingRights, root.Deepsecurity.UpdateRights);
  }
}(this, function(ApiClient, AdministratorRights, AdministratorRoleRights, AlertConfigurationRights, AlertRights, ApiKeyRights, AssetValueRights, CertificateRights, ComputerRights, ContactRights, DiagnosticRights, IpListRights, LicenseRights, MultiTenantRights, PolicyRights, PortListRights, ProxyRights, RelayGroupRights, SamlIdentityProviderRights, ScanCacheRights, ScheduleRights, ScheduledTaskRights, SettingRights, SyslogConfigurationRights, SystemInformationRights, TaggingRights, UpdateRights) {
  'use strict';




  /**
   * The PlatformRights model module.
   * @module model/PlatformRights
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>PlatformRights</code>.
   * Platform rights details.
   * @alias module:model/PlatformRights
   * @class
   */
  var exports = function() {
    var _this = this;



























  };

  /**
   * Constructs a <code>PlatformRights</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PlatformRights} obj Optional instance to populate.
   * @return {module:model/PlatformRights} The populated <code>PlatformRights</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('administratorRights')) {
        obj['administratorRights'] = AdministratorRights.constructFromObject(data['administratorRights']);
      }
      if (data.hasOwnProperty('administratorRoleRights')) {
        obj['administratorRoleRights'] = AdministratorRoleRights.constructFromObject(data['administratorRoleRights']);
      }
      if (data.hasOwnProperty('alertConfigurationRights')) {
        obj['alertConfigurationRights'] = AlertConfigurationRights.constructFromObject(data['alertConfigurationRights']);
      }
      if (data.hasOwnProperty('alertRights')) {
        obj['alertRights'] = AlertRights.constructFromObject(data['alertRights']);
      }
      if (data.hasOwnProperty('certificateRights')) {
        obj['certificateRights'] = CertificateRights.constructFromObject(data['certificateRights']);
      }
      if (data.hasOwnProperty('computerRights')) {
        obj['computerRights'] = ComputerRights.constructFromObject(data['computerRights']);
      }
      if (data.hasOwnProperty('contactRights')) {
        obj['contactRights'] = ContactRights.constructFromObject(data['contactRights']);
      }
      if (data.hasOwnProperty('diagnosticRights')) {
        obj['diagnosticRights'] = DiagnosticRights.constructFromObject(data['diagnosticRights']);
      }
      if (data.hasOwnProperty('assetValueRights')) {
        obj['assetValueRights'] = AssetValueRights.constructFromObject(data['assetValueRights']);
      }
      if (data.hasOwnProperty('licenseRights')) {
        obj['licenseRights'] = LicenseRights.constructFromObject(data['licenseRights']);
      }
      if (data.hasOwnProperty('multiTenantRights')) {
        obj['multiTenantRights'] = MultiTenantRights.constructFromObject(data['multiTenantRights']);
      }
      if (data.hasOwnProperty('policyRights')) {
        obj['policyRights'] = PolicyRights.constructFromObject(data['policyRights']);
      }
      if (data.hasOwnProperty('portListRights')) {
        obj['portListRights'] = PortListRights.constructFromObject(data['portListRights']);
      }
      if (data.hasOwnProperty('proxyRights')) {
        obj['proxyRights'] = ProxyRights.constructFromObject(data['proxyRights']);
      }
      if (data.hasOwnProperty('relayGroupRights')) {
        obj['relayGroupRights'] = RelayGroupRights.constructFromObject(data['relayGroupRights']);
      }
      if (data.hasOwnProperty('scanCacheRights')) {
        obj['scanCacheRights'] = ScanCacheRights.constructFromObject(data['scanCacheRights']);
      }
      if (data.hasOwnProperty('scheduledTaskRights')) {
        obj['scheduledTaskRights'] = ScheduledTaskRights.constructFromObject(data['scheduledTaskRights']);
      }
      if (data.hasOwnProperty('scheduleRights')) {
        obj['scheduleRights'] = ScheduleRights.constructFromObject(data['scheduleRights']);
      }
      if (data.hasOwnProperty('settingRights')) {
        obj['settingRights'] = SettingRights.constructFromObject(data['settingRights']);
      }
      if (data.hasOwnProperty('syslogConfigurationRights')) {
        obj['syslogConfigurationRights'] = SyslogConfigurationRights.constructFromObject(data['syslogConfigurationRights']);
      }
      if (data.hasOwnProperty('systemInformationRights')) {
        obj['systemInformationRights'] = SystemInformationRights.constructFromObject(data['systemInformationRights']);
      }
      if (data.hasOwnProperty('taggingRights')) {
        obj['taggingRights'] = TaggingRights.constructFromObject(data['taggingRights']);
      }
      if (data.hasOwnProperty('updateRights')) {
        obj['updateRights'] = UpdateRights.constructFromObject(data['updateRights']);
      }
      if (data.hasOwnProperty('apikeyRights')) {
        obj['apikeyRights'] = ApiKeyRights.constructFromObject(data['apikeyRights']);
      }
      if (data.hasOwnProperty('iplistRights')) {
        obj['iplistRights'] = IpListRights.constructFromObject(data['iplistRights']);
      }
      if (data.hasOwnProperty('samlidentityProviderRights')) {
        obj['samlidentityProviderRights'] = SamlIdentityProviderRights.constructFromObject(data['samlidentityProviderRights']);
      }
    }
    return obj;
  }

  /**
   * Rights related to administrators.
   * @member {module:model/AdministratorRights} administratorRights
   */
  exports.prototype['administratorRights'] = undefined;
  /**
   * Rights related to administrator roles.
   * @member {module:model/AdministratorRoleRights} administratorRoleRights
   */
  exports.prototype['administratorRoleRights'] = undefined;
  /**
   * Rights related to alert configurations.
   * @member {module:model/AlertConfigurationRights} alertConfigurationRights
   */
  exports.prototype['alertConfigurationRights'] = undefined;
  /**
   * Rights related to alerts.
   * @member {module:model/AlertRights} alertRights
   */
  exports.prototype['alertRights'] = undefined;
  /**
   * Rights related to certificates.
   * @member {module:model/CertificateRights} certificateRights
   */
  exports.prototype['certificateRights'] = undefined;
  /**
   * Rights related to computers.
   * @member {module:model/ComputerRights} computerRights
   */
  exports.prototype['computerRights'] = undefined;
  /**
   * Rights related to contacts.
   * @member {module:model/ContactRights} contactRights
   */
  exports.prototype['contactRights'] = undefined;
  /**
   * Rights related to diagnostics.
   * @member {module:model/DiagnosticRights} diagnosticRights
   */
  exports.prototype['diagnosticRights'] = undefined;
  /**
   * Rights related to asset values.
   * @member {module:model/AssetValueRights} assetValueRights
   */
  exports.prototype['assetValueRights'] = undefined;
  /**
   * Rights related to licenses.
   * @member {module:model/LicenseRights} licenseRights
   */
  exports.prototype['licenseRights'] = undefined;
  /**
   * Rights related to multi-tenant administration.
   * @member {module:model/MultiTenantRights} multiTenantRights
   */
  exports.prototype['multiTenantRights'] = undefined;
  /**
   * Rights related to policies.
   * @member {module:model/PolicyRights} policyRights
   */
  exports.prototype['policyRights'] = undefined;
  /**
   * Rights related to port lists.
   * @member {module:model/PortListRights} portListRights
   */
  exports.prototype['portListRights'] = undefined;
  /**
   * Rights related to proxies.
   * @member {module:model/ProxyRights} proxyRights
   */
  exports.prototype['proxyRights'] = undefined;
  /**
   * Rights related to relay groups.
   * @member {module:model/RelayGroupRights} relayGroupRights
   */
  exports.prototype['relayGroupRights'] = undefined;
  /**
   * Rights related to scan cache configurations.
   * @member {module:model/ScanCacheRights} scanCacheRights
   */
  exports.prototype['scanCacheRights'] = undefined;
  /**
   * Rights related to scheduled tasks.
   * @member {module:model/ScheduledTaskRights} scheduledTaskRights
   */
  exports.prototype['scheduledTaskRights'] = undefined;
  /**
   * Rights related to schedules.
   * @member {module:model/ScheduleRights} scheduleRights
   */
  exports.prototype['scheduleRights'] = undefined;
  /**
   * Rights related to settings.
   * @member {module:model/SettingRights} settingRights
   */
  exports.prototype['settingRights'] = undefined;
  /**
   * Rights related to syslog configurations.
   * @member {module:model/SyslogConfigurationRights} syslogConfigurationRights
   */
  exports.prototype['syslogConfigurationRights'] = undefined;
  /**
   * Rights related to system information.
   * @member {module:model/SystemInformationRights} systemInformationRights
   */
  exports.prototype['systemInformationRights'] = undefined;
  /**
   * Rights related to tagging.
   * @member {module:model/TaggingRights} taggingRights
   */
  exports.prototype['taggingRights'] = undefined;
  /**
   * Rights related to updates.
   * @member {module:model/UpdateRights} updateRights
   */
  exports.prototype['updateRights'] = undefined;
  /**
   * @member {module:model/ApiKeyRights} apikeyRights
   */
  exports.prototype['apikeyRights'] = undefined;
  /**
   * @member {module:model/IpListRights} iplistRights
   */
  exports.prototype['iplistRights'] = undefined;
  /**
   * @member {module:model/SamlIdentityProviderRights} samlidentityProviderRights
   */
  exports.prototype['samlidentityProviderRights'] = undefined;



  return exports;
}));



