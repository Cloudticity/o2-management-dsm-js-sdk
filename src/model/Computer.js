/**
 * Trend Micro Deep Security API
 * Copyright 2018 - 2020 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Deep Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Deep Security into your CI/CD pipeline.
 *
 * OpenAPI spec version: 12.0.446
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AntiMalwareComputerExtension', 'model/ApplicationControlComputerExtension', 'model/AzureARMVirtualMachineSummary', 'model/AzureVMVirtualMachineSummary', 'model/ComputerSettings', 'model/ComputerStatus', 'model/ComputerTasks', 'model/ESXSummary', 'model/Ec2VirtualMachineSummary', 'model/FirewallComputerExtension', 'model/IntegrityMonitoringComputerExtension', 'model/Interfaces', 'model/IntrusionPreventionComputerExtension', 'model/LogInspectionComputerExtension', 'model/NoConnectorVirtualMachineSummary', 'model/SAPComputerExtension', 'model/SecurityUpdates', 'model/VcloudVMVirtualMachineSummary', 'model/VmwareVMVirtualMachineSummary', 'model/WebReputationComputerExtension', 'model/WorkspaceVirtualMachineSummary'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AntiMalwareComputerExtension'), require('./ApplicationControlComputerExtension'), require('./AzureARMVirtualMachineSummary'), require('./AzureVMVirtualMachineSummary'), require('./ComputerSettings'), require('./ComputerStatus'), require('./ComputerTasks'), require('./ESXSummary'), require('./Ec2VirtualMachineSummary'), require('./FirewallComputerExtension'), require('./IntegrityMonitoringComputerExtension'), require('./Interfaces'), require('./IntrusionPreventionComputerExtension'), require('./LogInspectionComputerExtension'), require('./NoConnectorVirtualMachineSummary'), require('./SAPComputerExtension'), require('./SecurityUpdates'), require('./VcloudVMVirtualMachineSummary'), require('./VmwareVMVirtualMachineSummary'), require('./WebReputationComputerExtension'), require('./WorkspaceVirtualMachineSummary'));
  } else {
    // Browser globals (root is window)
    if (!root.Deepsecurity) {
      root.Deepsecurity = {};
    }
    root.Deepsecurity.Computer = factory(root.Deepsecurity.ApiClient, root.Deepsecurity.AntiMalwareComputerExtension, root.Deepsecurity.ApplicationControlComputerExtension, root.Deepsecurity.AzureARMVirtualMachineSummary, root.Deepsecurity.AzureVMVirtualMachineSummary, root.Deepsecurity.ComputerSettings, root.Deepsecurity.ComputerStatus, root.Deepsecurity.ComputerTasks, root.Deepsecurity.ESXSummary, root.Deepsecurity.Ec2VirtualMachineSummary, root.Deepsecurity.FirewallComputerExtension, root.Deepsecurity.IntegrityMonitoringComputerExtension, root.Deepsecurity.Interfaces, root.Deepsecurity.IntrusionPreventionComputerExtension, root.Deepsecurity.LogInspectionComputerExtension, root.Deepsecurity.NoConnectorVirtualMachineSummary, root.Deepsecurity.SAPComputerExtension, root.Deepsecurity.SecurityUpdates, root.Deepsecurity.VcloudVMVirtualMachineSummary, root.Deepsecurity.VmwareVMVirtualMachineSummary, root.Deepsecurity.WebReputationComputerExtension, root.Deepsecurity.WorkspaceVirtualMachineSummary);
  }
}(this, function(ApiClient, AntiMalwareComputerExtension, ApplicationControlComputerExtension, AzureARMVirtualMachineSummary, AzureVMVirtualMachineSummary, ComputerSettings, ComputerStatus, ComputerTasks, ESXSummary, Ec2VirtualMachineSummary, FirewallComputerExtension, IntegrityMonitoringComputerExtension, Interfaces, IntrusionPreventionComputerExtension, LogInspectionComputerExtension, NoConnectorVirtualMachineSummary, SAPComputerExtension, SecurityUpdates, VcloudVMVirtualMachineSummary, VmwareVMVirtualMachineSummary, WebReputationComputerExtension, WorkspaceVirtualMachineSummary) {
  'use strict';




  /**
   * The Computer model module.
   * @module model/Computer
   * @version 12.0.446
   */

  /**
   * Constructs a new <code>Computer</code>.
   * Computer details. Settings set on the computer override settings on an assigned policy. When the computer is virtual, additional information about the virtual machine is provided.
   * @alias module:model/Computer
   * @class
   */
  var exports = function() {
    var _this = this;








































  };

  /**
   * Constructs a <code>Computer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Computer} obj Optional instance to populate.
   * @return {module:model/Computer} The populated <code>Computer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('hostName')) {
        obj['hostName'] = ApiClient.convertToType(data['hostName'], 'String');
      }
      if (data.hasOwnProperty('displayName')) {
        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('lastIPUsed')) {
        obj['lastIPUsed'] = ApiClient.convertToType(data['lastIPUsed'], 'String');
      }
      if (data.hasOwnProperty('platform')) {
        obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
      }
      if (data.hasOwnProperty('groupID')) {
        obj['groupID'] = ApiClient.convertToType(data['groupID'], 'Number');
      }
      if (data.hasOwnProperty('policyID')) {
        obj['policyID'] = ApiClient.convertToType(data['policyID'], 'Number');
      }
      if (data.hasOwnProperty('assetImportanceID')) {
        obj['assetImportanceID'] = ApiClient.convertToType(data['assetImportanceID'], 'Number');
      }
      if (data.hasOwnProperty('relayListID')) {
        obj['relayListID'] = ApiClient.convertToType(data['relayListID'], 'Number');
      }
      if (data.hasOwnProperty('agentFingerPrint')) {
        obj['agentFingerPrint'] = ApiClient.convertToType(data['agentFingerPrint'], 'String');
      }
      if (data.hasOwnProperty('applianceFingerPrint')) {
        obj['applianceFingerPrint'] = ApiClient.convertToType(data['applianceFingerPrint'], 'String');
      }
      if (data.hasOwnProperty('lastAgentCommunication')) {
        obj['lastAgentCommunication'] = ApiClient.convertToType(data['lastAgentCommunication'], 'Number');
      }
      if (data.hasOwnProperty('lastApplianceCommunication')) {
        obj['lastApplianceCommunication'] = ApiClient.convertToType(data['lastApplianceCommunication'], 'Number');
      }
      if (data.hasOwnProperty('lastSendPolicyRequest')) {
        obj['lastSendPolicyRequest'] = ApiClient.convertToType(data['lastSendPolicyRequest'], 'Number');
      }
      if (data.hasOwnProperty('lastSendPolicySuccess')) {
        obj['lastSendPolicySuccess'] = ApiClient.convertToType(data['lastSendPolicySuccess'], 'Number');
      }
      if (data.hasOwnProperty('agentVersion')) {
        obj['agentVersion'] = ApiClient.convertToType(data['agentVersion'], 'String');
      }
      if (data.hasOwnProperty('computerStatus')) {
        obj['computerStatus'] = ComputerStatus.constructFromObject(data['computerStatus']);
      }
      if (data.hasOwnProperty('tasks')) {
        obj['tasks'] = ComputerTasks.constructFromObject(data['tasks']);
      }
      if (data.hasOwnProperty('securityUpdates')) {
        obj['securityUpdates'] = SecurityUpdates.constructFromObject(data['securityUpdates']);
      }
      if (data.hasOwnProperty('computerSettings')) {
        obj['computerSettings'] = ComputerSettings.constructFromObject(data['computerSettings']);
      }
      if (data.hasOwnProperty('interfaces')) {
        obj['interfaces'] = Interfaces.constructFromObject(data['interfaces']);
      }
      if (data.hasOwnProperty('biosUUID')) {
        obj['biosUUID'] = ApiClient.convertToType(data['biosUUID'], 'String');
      }
      if (data.hasOwnProperty('azureARMVirtualMachineSummary')) {
        obj['azureARMVirtualMachineSummary'] = AzureARMVirtualMachineSummary.constructFromObject(data['azureARMVirtualMachineSummary']);
      }
      if (data.hasOwnProperty('azureVMVirtualMachineSummary')) {
        obj['azureVMVirtualMachineSummary'] = AzureVMVirtualMachineSummary.constructFromObject(data['azureVMVirtualMachineSummary']);
      }
      if (data.hasOwnProperty('ec2VirtualMachineSummary')) {
        obj['ec2VirtualMachineSummary'] = Ec2VirtualMachineSummary.constructFromObject(data['ec2VirtualMachineSummary']);
      }
      if (data.hasOwnProperty('noConnectorVirtualMachineSummary')) {
        obj['noConnectorVirtualMachineSummary'] = NoConnectorVirtualMachineSummary.constructFromObject(data['noConnectorVirtualMachineSummary']);
      }
      if (data.hasOwnProperty('vmwareVMVirtualMachineSummary')) {
        obj['vmwareVMVirtualMachineSummary'] = VmwareVMVirtualMachineSummary.constructFromObject(data['vmwareVMVirtualMachineSummary']);
      }
      if (data.hasOwnProperty('vcloudVMVirtualMachineSummary')) {
        obj['vcloudVMVirtualMachineSummary'] = VcloudVMVirtualMachineSummary.constructFromObject(data['vcloudVMVirtualMachineSummary']);
      }
      if (data.hasOwnProperty('workspaceVirtualMachineSummary')) {
        obj['workspaceVirtualMachineSummary'] = WorkspaceVirtualMachineSummary.constructFromObject(data['workspaceVirtualMachineSummary']);
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
      }
      if (data.hasOwnProperty('antiMalware')) {
        obj['antiMalware'] = AntiMalwareComputerExtension.constructFromObject(data['antiMalware']);
      }
      if (data.hasOwnProperty('webReputation')) {
        obj['webReputation'] = WebReputationComputerExtension.constructFromObject(data['webReputation']);
      }
      if (data.hasOwnProperty('firewall')) {
        obj['firewall'] = FirewallComputerExtension.constructFromObject(data['firewall']);
      }
      if (data.hasOwnProperty('intrusionPrevention')) {
        obj['intrusionPrevention'] = IntrusionPreventionComputerExtension.constructFromObject(data['intrusionPrevention']);
      }
      if (data.hasOwnProperty('integrityMonitoring')) {
        obj['integrityMonitoring'] = IntegrityMonitoringComputerExtension.constructFromObject(data['integrityMonitoring']);
      }
      if (data.hasOwnProperty('logInspection')) {
        obj['logInspection'] = LogInspectionComputerExtension.constructFromObject(data['logInspection']);
      }
      if (data.hasOwnProperty('applicationControl')) {
        obj['applicationControl'] = ApplicationControlComputerExtension.constructFromObject(data['applicationControl']);
      }
      if (data.hasOwnProperty('SAP')) {
        obj['SAP'] = SAPComputerExtension.constructFromObject(data['SAP']);
      }
      if (data.hasOwnProperty('ESXSummary')) {
        obj['ESXSummary'] = ESXSummary.constructFromObject(data['ESXSummary']);
      }
    }
    return obj;
  }

  /**
   * Hostname of the computer. Searchable as String.
   * @member {String} hostName
   */
  exports.prototype['hostName'] = undefined;
  /**
   * Display name of the computer. Searchable as String.
   * @member {String} displayName
   */
  exports.prototype['displayName'] = undefined;
  /**
   * Description of the computer. Searchable as String.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Most recent IP address used by the computer. This value is null when the computer is not activated. Searchable as String.
   * @member {String} lastIPUsed
   */
  exports.prototype['lastIPUsed'] = undefined;
  /**
   * Platform of the computer. Automatically detected and set. Searchable as String
   * @member {String} platform
   */
  exports.prototype['platform'] = undefined;
  /**
   * ID of the computer group to which the computer belongs. Searchable as Numeric.
   * @member {Number} groupID
   */
  exports.prototype['groupID'] = undefined;
  /**
   * ID of the policy assigned to the computer. Searchable as Numeric.
   * @member {Number} policyID
   */
  exports.prototype['policyID'] = undefined;
  /**
   * ID of the asset importance assigned to the computer. Searchable as Numeric.
   * @member {Number} assetImportanceID
   */
  exports.prototype['assetImportanceID'] = undefined;
  /**
   * ID of the relay list that is assigned to the computer. Searchable as Numeric.
   * @member {Number} relayListID
   */
  exports.prototype['relayListID'] = undefined;
  /**
   * FingerPrint of the Agent on the computer. This value is null when no agent is installed or activated. Searchable as String.
   * @member {String} agentFingerPrint
   */
  exports.prototype['agentFingerPrint'] = undefined;
  /**
   * FingerPrint of the Appliance protecting the computer. This value is null when no Deep Security Virtual Appliance is protecting the computer.
   * @member {String} applianceFingerPrint
   */
  exports.prototype['applianceFingerPrint'] = undefined;
  /**
   * Timestamp of the last agent communication, in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastAgentCommunication
   */
  exports.prototype['lastAgentCommunication'] = undefined;
  /**
   * Timestamp of the last appliance communication, in milliseconds since epoch.
   * @member {Number} lastApplianceCommunication
   */
  exports.prototype['lastApplianceCommunication'] = undefined;
  /**
   * Timestamp of the last policy request sent, in milliseconds since epoch. Searchable as Date.
   * @member {Number} lastSendPolicyRequest
   */
  exports.prototype['lastSendPolicyRequest'] = undefined;
  /**
   * Timestamp of last successful policy sent, in milliseconds since epoch.  Searchable as Date.
   * @member {Number} lastSendPolicySuccess
   */
  exports.prototype['lastSendPolicySuccess'] = undefined;
  /**
   * Version of Deep Security Agent that is installed on the computer. When no agent software is installed or activated, the version is '0.0.0.0'. Searchable as String, however to search for computers without an agent, search for computers that have no agent fingerprint.'.
   * @member {String} agentVersion
   */
  exports.prototype['agentVersion'] = undefined;
  /**
   * @member {module:model/ComputerStatus} computerStatus
   */
  exports.prototype['computerStatus'] = undefined;
  /**
   * @member {module:model/ComputerTasks} tasks
   */
  exports.prototype['tasks'] = undefined;
  /**
   * Security Update information.
   * @member {module:model/SecurityUpdates} securityUpdates
   */
  exports.prototype['securityUpdates'] = undefined;
  /**
   * Settings that can be applied directly to the computer. Those settings will generally override policy settings.
   * @member {module:model/ComputerSettings} computerSettings
   */
  exports.prototype['computerSettings'] = undefined;
  /**
   * List of interfaces detected on the computer. This value is null when the computer is not activated.
   * @member {module:model/Interfaces} interfaces
   */
  exports.prototype['interfaces'] = undefined;
  /**
   * BIOS UUID, for example: \"421e1137-5c49-56e4-246d-9bf7637e69f5\". Only applies to VMware VMs.
   * @member {String} biosUUID
   */
  exports.prototype['biosUUID'] = undefined;
  /**
   * @member {module:model/AzureARMVirtualMachineSummary} azureARMVirtualMachineSummary
   */
  exports.prototype['azureARMVirtualMachineSummary'] = undefined;
  /**
   * @member {module:model/AzureVMVirtualMachineSummary} azureVMVirtualMachineSummary
   */
  exports.prototype['azureVMVirtualMachineSummary'] = undefined;
  /**
   * @member {module:model/Ec2VirtualMachineSummary} ec2VirtualMachineSummary
   */
  exports.prototype['ec2VirtualMachineSummary'] = undefined;
  /**
   * @member {module:model/NoConnectorVirtualMachineSummary} noConnectorVirtualMachineSummary
   */
  exports.prototype['noConnectorVirtualMachineSummary'] = undefined;
  /**
   * @member {module:model/VmwareVMVirtualMachineSummary} vmwareVMVirtualMachineSummary
   */
  exports.prototype['vmwareVMVirtualMachineSummary'] = undefined;
  /**
   * @member {module:model/VcloudVMVirtualMachineSummary} vcloudVMVirtualMachineSummary
   */
  exports.prototype['vcloudVMVirtualMachineSummary'] = undefined;
  /**
   * @member {module:model/WorkspaceVirtualMachineSummary} workspaceVirtualMachineSummary
   */
  exports.prototype['workspaceVirtualMachineSummary'] = undefined;
  /**
   * ID of the computer. Searchable as ID.
   * @member {Number} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * @member {module:model/AntiMalwareComputerExtension} antiMalware
   */
  exports.prototype['antiMalware'] = undefined;
  /**
   * @member {module:model/WebReputationComputerExtension} webReputation
   */
  exports.prototype['webReputation'] = undefined;
  /**
   * @member {module:model/FirewallComputerExtension} firewall
   */
  exports.prototype['firewall'] = undefined;
  /**
   * @member {module:model/IntrusionPreventionComputerExtension} intrusionPrevention
   */
  exports.prototype['intrusionPrevention'] = undefined;
  /**
   * @member {module:model/IntegrityMonitoringComputerExtension} integrityMonitoring
   */
  exports.prototype['integrityMonitoring'] = undefined;
  /**
   * @member {module:model/LogInspectionComputerExtension} logInspection
   */
  exports.prototype['logInspection'] = undefined;
  /**
   * @member {module:model/ApplicationControlComputerExtension} applicationControl
   */
  exports.prototype['applicationControl'] = undefined;
  /**
   * @member {module:model/SAPComputerExtension} SAP
   */
  exports.prototype['SAP'] = undefined;
  /**
   * @member {module:model/ESXSummary} ESXSummary
   */
  exports.prototype['ESXSummary'] = undefined;



  return exports;
}));



